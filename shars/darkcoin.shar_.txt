# This is a shell archive.  Save it in a file, remove anything before
# this line, and then unpack it by entering "sh file".  Note, it may
# create directories; files and directories will be owned by you and
# have default permissions.
#
# This archive contains:
#
#	darkcoin
#	darkcoin/files
#	darkcoin/files/patch-qt_makefile_am_editSedCommands.patch
#	darkcoin/files/patch-Makefile_include_editSedCommands.patch
#	darkcoin/files/pkg-message.in
#	darkcoin/files/darkcoin.in
#	darkcoin/files/darkcoin.conf.sample
#	darkcoin/pkg-descr
#	darkcoin/distinfo
#	darkcoin/pkg-plist
#	darkcoin/Makefile
#
echo c - darkcoin
mkdir -p darkcoin > /dev/null 2>&1
echo c - darkcoin/files
mkdir -p darkcoin/files > /dev/null 2>&1
echo x - darkcoin/files/patch-qt_makefile_am_editSedCommands.patch
sed 's/^X//' >darkcoin/files/patch-qt_makefile_am_editSedCommands.patch << '1dbc2883b0b3092c7e2eb3456cf05a2f'
Xdiff --git a/src/qt/Makefile.am b/src/qt/Makefile.am
Xindex 648971b..97b2ec4 100644
X--- a/src/qt/Makefile.am
X+++ src/qt/Makefile.am
X@@ -373,7 +373,7 @@ translate: bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_CPP) $(
X $(QT_QRC_CPP): $(QT_QRC) $(QT_QM) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(PROTOBUF_H)
X 	@cd $(abs_srcdir); test -f $(RCC) && QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin -o $(abs_builddir)/$@ $< || \
X 	  echo error: could not build $@
X-	$(SED) -e '/^\*\*.*Created:/d' $@ > $@.n && mv $@{.n,}
X-	$(SED) -e '/^\*\*.*by:/d' $@  > $@.n && mv $@{.n,}
X+	$(SED) -e '/^\*\*.*Created:/d' $@ > $@.n && mv $@.n $@
X+	$(SED) -e '/^\*\*.*by:/d' $@  > $@.n && mv $@.n $@
X 
X CLEANFILES = $(BUILT_SOURCES) $(QT_QM) $(QT_FORMS_H) *.gcda *.gcno
1dbc2883b0b3092c7e2eb3456cf05a2f
echo x - darkcoin/files/patch-Makefile_include_editSedCommands.patch
sed 's/^X//' >darkcoin/files/patch-Makefile_include_editSedCommands.patch << 'eebf36c55feb977dbffe911f59f414e3'
Xdiff --git a/src/Makefile.include b/src/Makefile.include
Xindex 2fc6cd7..cdd16f5 100644
X--- a/src/Makefile.include
X+++ src/Makefile.include
X@@ -40,18 +40,18 @@ $(LIBBITCOINQT):
X ui_%.h: %.ui
X 	@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)
X 	@test -f $(UIC) && QT_SELECT=$(QT_SELECT) $(UIC) -o $(abs_builddir)/$@ $(abs_srcdir)/$< || echo error: could not build $(abs_builddir)/$@
X-	$(SED) -e '/^\*\*.*Created:/d' $(abs_builddir)/$@ > $(abs_builddir)/$@.n && mv $(abs_builddir)/$@{.n,}
X-	$(SED) -e '/^\*\*.*by:/d' $(abs_builddir)/$@ > $(abs_builddir)/$@.n && mv $(abs_builddir)/$@{.n,}
X+	$(SED) -e '/^\*\*.*Created:/d' $(abs_builddir)/$@ > $(abs_builddir)/$@.n && mv $(abs_builddir)/$@.n $(abs_builddir)/$@
X+	$(SED) -e '/^\*\*.*by:/d' $(abs_builddir)/$@ > $(abs_builddir)/$@.n && mv $(abs_builddir)/$@.n $(abs_builddir)/$@
X 
X %.moc: %.cpp
X 	QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<
X-	$(SED) -e '/^\*\*.*Created:/d' $@ > $@.n && mv $@{.n,}
X-	$(SED) -e '/^\*\*.*by:/d' $@ > $@.n && mv $@{.n,}
X+	$(SED) -e '/^\*\*.*Created:/d' $@ > $@.n && mv $@.n $(abs_builddir)/$@
X+	$(SED) -e '/^\*\*.*by:/d' $@ > $@.n && mv $@.n $(abs_builddir)/$@
X 
X moc_%.cpp: %.h
X 	QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<
X-	$(SED) -e '/^\*\*.*Created:/d' $@ > $@.n && mv $@{.n,}
X-	$(SED) -e '/^\*\*.*by:/d' $@ > $@.n && mv $@{.n,}
X+	$(SED) -e '/^\*\*.*Created:/d' $@ > $@.n && mv $@.n $(abs_builddir)/$@
X+	$(SED) -e '/^\*\*.*by:/d' $@ > $@.n && mv $@.n $(abs_builddir)/$@
X 
X %.qm: %.ts
X 	@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)
eebf36c55feb977dbffe911f59f414e3
echo x - darkcoin/files/pkg-message.in
sed 's/^X//' >darkcoin/files/pkg-message.in << 'b7f1e98a4612171e43f3ce52cfa98e18'
X*******************************************************************
XTo configure the Zetacoin server please edit: 
X%%PREFIX%%/etc/%%PORTNAME%%.conf
X
XYou must at least set a "rpcpassword" in the configuration file above.
X
XTo run the %%PORTNAME%%d server at startup, add the following
Xsettings to your /etc/rc.conf
X
X%%PORTNAME%%_enable="YES"
X
X*******************************************************************
b7f1e98a4612171e43f3ce52cfa98e18
echo x - darkcoin/files/darkcoin.in
sed 's/^X//' >darkcoin/files/darkcoin.in << '0be206f607ba78b5ddb5a50d410102d6'
X#!/bin/sh
X#
X# $FreeBSD: $
X#
X
X# PROVIDE: %%PORTNAME%%
X# REQUIRE: LOGIN
X# KEYWORD: shutdown
X
X#
X# Add the following lines to /etc/rc.conf.local or /etc/rc.conf
X# to enable this service:
X#
X# %%PORTNAME%%_enable (bool):	Set to NO by default.
X#				Set it to YES to enable %%PORTNAME%%.
X# %%PORTNAME%%_config (path):	Set to %%PREFIX%%/etc/%%PORTNAME%%.conf
X#				by default.
X# %%PORTNAME%%_user:	The user account %%PORTNAME%% daemon runs as
X#				It uses 'root' user by default.
X# %%PORTNAME%%_group:	The group account %%PORTNAME%% daemon runs as
X#				It uses 'wheel' group by default.
X# %%PORTNAME%%_datadir (str):	Default to "/var/db/%%PORTNAME%%"
X#				Base data directory.
X
X. /etc/rc.subr
X
Xname=%%PORTNAME%%
Xrcvar=%%PORTNAME%%_enable
X
X: ${%%PORTNAME%%_enable:=NO}
X: ${%%PORTNAME%%_config=%%PREFIX%%/etc/%%PORTNAME%%.conf}
X: ${%%PORTNAME%%_datadir=/var/db/%%PORTNAME%%}
X: ${%%PORTNAME%%_user="root"}
X: ${%%PORTNAME%%_group="wheel"}
X
Xrequired_files=${%%PORTNAME%%_config}
Xcommand=%%PREFIX%%/bin/%%PORTNAME%%d
X%%PORTNAME%%_chdir=${%%PORTNAME%%_datadir}
Xpidfile="${%%PORTNAME%%_datadir}/%%PORTNAME%%d.pid"
Xstop_cmd=%%PORTNAME%%_stop
Xcommand_args="-conf=${%%PORTNAME%%_config} -datadir=${%%PORTNAME%%_datadir} -noupnp -daemon -pid=${pidfile}"
Xstart_precmd="${name}_prestart"
X
X%%PORTNAME%%_create_datadir()
X{
X	echo "Creating data directory"
X	eval mkdir -p ${%%PORTNAME%%_datadir}
X	[ $? -eq 0 ] && chown -R ${%%PORTNAME%%_user}:${%%PORTNAME%%_group} ${%%PORTNAME%%_datadir}
X}
X
X%%PORTNAME%%_prestart()
X{
X	if [ ! -d "${%%PORTNAME%%_datadir}/." ]; then
X		%%PORTNAME%%_create_datadir || return 1
X	fi
X}
X
X%%PORTNAME%%_requirepidfile()
X{
X	if [ ! "0`check_pidfile ${pidfile} ${command}`" -gt 1 ]; then
X		echo "${name} not running? (check $pidfile)."
X		exit 1
X	fi
X}
X
X%%PORTNAME%%_stop()
X{
X    %%PORTNAME%%_requirepidfile
X
X	echo "Stopping ${name}."
X	eval ${command} -conf=${%%PORTNAME%%_config} -datadir=${%%PORTNAME%%_datadir} stop
X	wait_for_pids ${rc_pid}
X}
X
Xload_rc_config $name
Xrun_rc_command "$1"
0be206f607ba78b5ddb5a50d410102d6
echo x - darkcoin/files/darkcoin.conf.sample
sed 's/^X//' >darkcoin/files/darkcoin.conf.sample << '03f73f3ecc32cf5578c2a3ada2d1f582'
Xrpcuser=myname
X#rpcpassword=YOU MUST SET A PASSWORD
Xmaxconnections=20
Xrpcallowip=127.0.0.1
Xrpcport=9998
Xport=9999
Xserver=1
Xdaemon=1
Xlisten=1
Xlogtimestamps=1
Xaddnode=darkcoin.securepayment.cc
03f73f3ecc32cf5578c2a3ada2d1f582
echo x - darkcoin/pkg-descr
sed 's/^X//' >darkcoin/pkg-descr << '1601a496cf746d19f619717f6eefb77c'
XDarkcoin (DRK) is an open sourced, privacy-centric digital currency.
XIt allows you keep your finances private as you make transactions, 
Xsimilar to cash. Users hold the crypto keys to their own money and 
Xtransact directly with each other, with the help of a P2P network to 
Xcheck for double-spending.
X
XWWW: https://www.darkcoin.io/
1601a496cf746d19f619717f6eefb77c
echo x - darkcoin/distinfo
sed 's/^X//' >darkcoin/distinfo << '9626c20af7f56e67fc99df50cc2db4e2'
XSHA256 (darkcoin-0.11.0.14.tar.gz) = e79d4ec2a2cd5b3953613a2d6012ccfc8ff2748595e67cc66ae5ca64a09ca13d
XSIZE (darkcoin-0.11.0.14.tar.gz) = 4277572
9626c20af7f56e67fc99df50cc2db4e2
echo x - darkcoin/pkg-plist
sed 's/^X//' >darkcoin/pkg-plist << '852796941a219fb5f7b4b42947bd42b2'
X%%NO_X11%%%%EXECUTABLE_DAEMON%%
X%%NO_X11%%@sample etc/%%PORTNAME%%.conf.sample
X%%CLI%%%%EXECUTABLE_CLI%%
X%%X11%%%%EXECUTABLE_QT%%
X%%X11%%share/applications/%%PORTNAME%%-qt.desktop
X%%X11%%share/pixmaps/%%PORTNAME%%.png
852796941a219fb5f7b4b42947bd42b2
echo x - darkcoin/Makefile
sed 's/^X//' >darkcoin/Makefile << '07f9fdc49511aab673172f947b869e02'
X# Created by: Daniel Morante <daniel@morante.net>
X# $FreeBSD $
X
XPORTNAME=	darkcoin
XPORTVERSION=	0.11.0.14
XCATEGORIES=	net-p2p finance
XMASTER_SITES=	GH
X
XMAINTAINER=	daniel@morante.net
XCOMMENT=	Open sourced, privacy-centric digital currency
X
XLICENSE=	MIT
X
XBUILD_DEPENDS=	pkg-config:${PORTSDIR}/devel/pkgconf
XLIB_DEPENDS=	libboost_date_time.so:${PORTSDIR}/devel/boost-libs
X
XUSE_GITHUB=	yes
XGH_ACCOUNT=	${PORTNAME}
XGH_PROJECT=	${PORTNAME}
XGH_COMMIT=	7fafe5d
XGH_TAGNAME=	7fafe5d
X
XOPTIONS_DEFINE=	X11 UPNP WALLET CLI TEST
XOPTIONS_SUB=	yes
X
XWALLET_DESC=	Build wallet or P2P server node only
XQRCODES_DESC=	Enable QR code display when building graphical interface
XCLI_DESC=	Build command line RPC client
X
XOPTIONS_DEFAULT=	X11 WALLET QRCODES
XOPTIONS_GROUP=	X11
XOPTIONS_GROUP_X11=	QRCODES
X
XUPNP_CONFIGURE_WITH=	miniupnpc
XUPNP_LIB_DEPENDS=	libminiupnpc.so:${PORTSDIR}/net/miniupnpc
X
XX11_CONFIGURE_WITH=	gui
XX11_CONFIGURE_ON=	--without-daemon
XX11_CONFIGURE_OFF=	--with-daemon
XX11_BUILD_DEPENDS=	protoc:${PORTSDIR}/devel/protobuf
XX11_USE=	qt4=corelib,gui,qmake_build,linguist,uic,moc,rcc,qtestlib_build
XX11_USES=	desktop-file-utils
X
XWALLET_CONFIGURE_ENABLE=	wallet
XWALLET_CXXFLAGS=	-I${BDB_INCLUDE_DIR} -L${BDB_LIB_DIR}
XWALLET_USE=	bdb=yes
X
XQRCODES_LIB_DEPENDS=	libqrencode.so:${PORTSDIR}/graphics/libqrencode
XQRCODES_CONFIGURE_WITH=	qrencode
X
XCLI_CONFIGURE_WITH=	cli
X
XTEST_CONFIGURE_ENABLE=	tests
XTEST_ALL_TARGET=	check
X
XAUTOMAKE_ARGS+=	--add-missing
XUSE_AUTOTOOLS=	aclocal autoheader automake autoconf
XCONFIGURE_ENV=	SSL_LIBS="-lssl" CRYPTO_LIBS="-lcrypto" SSL_CFLAGS="-I/usr/include" CRYPTO_CFLAGS="-I/usr/include"
X
XUSES=		gmake
XUSE_OPENSSL=	yes
XWANT_BDB_VER=	48
X
XCXXFLAGS+=	-I${LOCALBASE}/include
XCXXFLAGS+=	-L${LOCALBASE}/lib
XCXXFLAGS+=	-Wno-invalid-offsetof
X
XQT_BINARY=		${PORTNAME}-qt
XCLI_BINARY=		${PORTNAME}-cli
XDAEMON=		${PORTNAME}d
X
XPLIST_SUB+=	EXECUTABLE_QT=bin/${QT_BINARY} \
X			EXECUTABLE_CLI=bin/${CLI_BINARY} \
X			EXECUTABLE_DAEMON=bin/${DAEMON} \
X			PORTNAME=${PORTNAME}
X
X.include <bsd.port.options.mk>
X
X.if empty(PORT_OPTIONS:MX11) && !empty(PORT_OPTIONS:MQRCODES)
XBROKEN=	QRCODES requires X11 support.  Run 'make config' again!
X.endif
X
X# tests will currently fail
X.if ${PORT_OPTIONS:MTEST}
XBROKEN=	automated testing fails
X.endif
X
X.if ! ${PORT_OPTIONS:MX11}
XUSE_RC_SUBR=	${PORTNAME}
XSUB_LIST+=	PORTNAME=${PORTNAME}
XSUB_FILES=	pkg-message
X.endif
X
Xpost-patch:
X	${MKDIR} ${WRKSRC}/src/build-aux
X
Xdo-install:
X.if ${PORT_OPTIONS:MCLI}
X	${INSTALL_PROGRAM} -s ${WRKSRC}/src/${CLI_BINARY} ${STAGEDIR}${PREFIX}/bin/${CLI_BINARY}
X.endif
X
X.if ${PORT_OPTIONS:MX11}
X	${INSTALL_PROGRAM} -s ${WRKSRC}/src/qt/${QT_BINARY} ${STAGEDIR}${PREFIX}/bin/${QT_BINARY}
X	${REINPLACE_CMD} -e 's,=/usr,=${PREFIX},' \
X		-e 's,128,,g' ${WRKSRC}/contrib/debian/darkcoin-qt.desktop
X	${INSTALL} ${WRKSRC}/contrib/debian/${PORTNAME}-qt.desktop ${STAGEDIR}${PREFIX}/share/applications/${PORTNAME}-qt.desktop
X	${INSTALL} ${WRKSRC}/src/qt/res/icons/bitcoin.png ${STAGEDIR}${PREFIX}/share/pixmaps/${PORTNAME}.png
X.else
X	${INSTALL_PROGRAM} -s ${WRKSRC}/src/${DAEMON} ${STAGEDIR}${PREFIX}/bin/${DAEMON}
X	${INSTALL_DATA} ${FILESDIR}/${PORTNAME}.conf.sample ${STAGEDIR}${PREFIX}/etc/${PORTNAME}.conf.sample
X.endif
X
X.include <bsd.port.mk>
07f9fdc49511aab673172f947b869e02
exit

