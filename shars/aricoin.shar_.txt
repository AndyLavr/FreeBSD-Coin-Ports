# This is a shell archive.  Save it in a file, remove anything before
# this line, and then unpack it by entering "sh file".  Note, it may
# create directories; files and directories will be owned by you and
# have default permissions.
#
# This archive contains:
#
#	aricoin
#	aricoin/files
#	aricoin/files/patch-src-makefile_unix
#	aricoin/files/extra-patch-endian
#	aricoin/files/pkg-message.in
#	aricoin/files/aricoin.in
#	aricoin/files/patch-src-wallet_cpp
#	aricoin/files/aricoin.conf.sample
#	aricoin/files/patch-aricoin-qt_pro
#	aricoin/files/patch-src__serialize.h
#	aricoin/files/patch-src__net.cpp
#	aricoin/files/patch-src__qt__qtipcserver.cpp
#	aricoin/Makefile
#	aricoin/pkg-descr
#	aricoin/distinfo
#	aricoin/pkg-plist
#
echo c - aricoin
mkdir -p aricoin > /dev/null 2>&1
echo c - aricoin/files
mkdir -p aricoin/files > /dev/null 2>&1
echo x - aricoin/files/patch-src-makefile_unix
sed 's/^X//' >aricoin/files/patch-src-makefile_unix << 'fdc10b07016447f89cb1abea278b9b3f'
X--- src/makefile.unix.orig	2013-09-05 14:00:09.000000000 -0400
X+++ src/makefile.unix	2014-01-09 20:20:29.000000000 -0500
X@@ -6,6 +6,11 @@
X 
X DEFS=-DUSE_IPV6 -DBOOST_SPIRIT_THREADSAFE
X 
X+BOOST_INCLUDE_PATH=%%PREFIX%%/include
X+BDB_INCLUDE_PATH=%%PREFIX%%/include/db48
X+BOOST_LIB_PATH=%%PREFIX%%/lib
X+BDB_LIB_PATH=%%PREFIX%%/lib/db48
X+
X DEFS += $(addprefix -I,$(CURDIR) $(CURDIR)/obj $(BOOST_INCLUDE_PATH) $(BDB_INCLUDE_PATH) $(OPENSSL_INCLUDE_PATH))
X LIBS = $(addprefix -L,$(BOOST_LIB_PATH) $(BDB_LIB_PATH) $(OPENSSL_LIB_PATH))
X 
X@@ -29,6 +34,7 @@
X    -l boost_filesystem$(BOOST_LIB_SUFFIX) \
X    -l boost_program_options$(BOOST_LIB_SUFFIX) \
X    -l boost_thread$(BOOST_LIB_SUFFIX) \
X+   -l boost_chrono$(BOOST_LIB_SUFFIX) \
X    -l db_cxx$(BDB_LIB_SUFFIX) \
X    -l ssl \
X    -l crypto
X@@ -44,7 +50,6 @@
X LIBS+= \
X  -Wl,-B$(LMODE2) \
X    -l z \
X-   -l dl \
X    -l pthread
X 
X 
fdc10b07016447f89cb1abea278b9b3f
echo x - aricoin/files/extra-patch-endian
sed 's/^X//' >aricoin/files/extra-patch-endian << '62509b761183b4298ad392c31112bfde'
X--- src/scrypt.c.orig	2014-08-30 05:49:14.000000000 -0400
X+++ src/scrypt.c	2014-10-16 22:32:31.000000000 -0400
X@@ -33,22 +33,6 @@
X #include <string.h>
X #include <openssl/sha.h>
X 
X-static inline uint32_t be32dec(const void *pp)
X-{
X-	const uint8_t *p = (uint8_t const *)pp;
X-	return ((uint32_t)(p[3]) + ((uint32_t)(p[2]) << 8) +
X-	    ((uint32_t)(p[1]) << 16) + ((uint32_t)(p[0]) << 24));
X-}
X-
X-static inline void be32enc(void *pp, uint32_t x)
X-{
X-	uint8_t *p = (uint8_t *)pp;
X-	p[3] = x & 0xff;
X-	p[2] = (x >> 8) & 0xff;
X-	p[1] = (x >> 16) & 0xff;
X-	p[0] = (x >> 24) & 0xff;
X-}
X-
X static inline uint32_t le32dec(const void *pp)
X {
X 	const uint8_t *p = (uint8_t const *)pp;
62509b761183b4298ad392c31112bfde
echo x - aricoin/files/pkg-message.in
sed 's/^X//' >aricoin/files/pkg-message.in << '083d169a3d7e365550d1512fdd93a13c'
X*******************************************************************
XTo configure the Aricoin server please edit: 
X%%PREFIX%%/etc/%%PORTNAME%%.conf
X
XYou must at least set a "rpcpassword" in the configuration file above.
X
XTo run the %%PORTNAME%%d server at startup, add the following
Xsettings to your /etc/rc.conf
X
X%%PORTNAME%%_enable="YES"
X
X*******************************************************************
083d169a3d7e365550d1512fdd93a13c
echo x - aricoin/files/aricoin.in
sed 's/^X//' >aricoin/files/aricoin.in << '04d3bb917141252f86e8d8d0a35c8a98'
X#!/bin/sh
X#
X# $FreeBSD: $
X#
X
X# PROVIDE: %%PORTNAME%%
X# REQUIRE: LOGIN
X# KEYWORD: shutdown
X
X#
X# Add the following lines to /etc/rc.conf.local or /etc/rc.conf
X# to enable this service:
X#
X# %%PORTNAME%%_enable (bool):	Set to NO by default.
X#				Set it to YES to enable %%PORTNAME%%.
X# %%PORTNAME%%_config (path):	Set to %%PREFIX%%/etc/%%PORTNAME%%.conf
X#				by default.
X# %%PORTNAME%%_user:	The user account %%PORTNAME%% daemon runs as
X#				It uses 'root' user by default.
X# %%PORTNAME%%_group:	The group account %%PORTNAME%% daemon runs as
X#				It uses 'wheel' group by default.
X# %%PORTNAME%%_datadir (str):	Default to "/var/db/%%PORTNAME%%"
X#				Base data directory.
X
X. /etc/rc.subr
X
Xname=%%PORTNAME%%
Xrcvar=%%PORTNAME%%_enable
X
X: ${%%PORTNAME%%_enable:=NO}
X: ${%%PORTNAME%%_config=%%PREFIX%%/etc/%%PORTNAME%%.conf}
X: ${%%PORTNAME%%_datadir=/var/db/%%PORTNAME%%}
X: ${%%PORTNAME%%_user="root"}
X: ${%%PORTNAME%%_group="wheel"}
X
Xrequired_files=${%%PORTNAME%%_config}
Xcommand=%%PREFIX%%/bin/%%PORTNAME%%d
X%%PORTNAME%%_chdir=${%%PORTNAME%%_datadir}
Xpidfile="${%%PORTNAME%%_datadir}/%%PORTNAME%%d.pid"
Xstop_cmd=%%PORTNAME%%_stop
Xcommand_args="-conf=${%%PORTNAME%%_config} -datadir=${%%PORTNAME%%_datadir} -noupnp -daemon -pid=${pidfile}"
Xstart_precmd="${name}_prestart"
X
X%%PORTNAME%%_create_datadir()
X{
X	echo "Creating data directory"
X	eval mkdir -p ${%%PORTNAME%%_datadir}
X	[ $? -eq 0 ] && chown -R ${%%PORTNAME%%_user}:${%%PORTNAME%%_group} ${%%PORTNAME%%_datadir}
X	#ln -s ${%%PORTNAME%%_datadir} /.%%PORTNAME%%
X}
X
X%%PORTNAME%%_prestart()
X{
X	if [ ! -d "${%%PORTNAME%%_datadir}/." ]; then
X		%%PORTNAME%%_create_datadir || return 1
X	fi
X}
X
X%%PORTNAME%%_requirepidfile()
X{
X	if [ ! "0`check_pidfile ${pidfile} ${command}`" -gt 1 ]; then
X		echo "${name} not running? (check $pidfile)."
X		exit 1
X	fi
X}
X
X%%PORTNAME%%_stop()
X{
X    %%PORTNAME%%_requirepidfile
X
X	echo "Stopping ${name}."
X	eval ${command} -conf=${%%PORTNAME%%_config} -datadir=${%%PORTNAME%%_datadir} stop
X	wait_for_pids ${rc_pid}
X}
X
Xload_rc_config $name
Xrun_rc_command "$1"
04d3bb917141252f86e8d8d0a35c8a98
echo x - aricoin/files/patch-src-wallet_cpp
sed 's/^X//' >aricoin/files/patch-src-wallet_cpp << 'b8dc771db0b404fe7678bc2eaffc11b3'
X--- src/wallet.cpp.orig	2014-08-30 05:49:14.000000000 -0400
X+++ src/wallet.cpp	2014-10-16 20:57:34.000000000 -0400
X@@ -11,6 +11,7 @@
X #include "ui_interface.h"
X #include "base58.h"
X #include "main.h"
X+#include <boost/algorithm/string/replace.hpp>
X 
X using namespace std;
X 
b8dc771db0b404fe7678bc2eaffc11b3
echo x - aricoin/files/aricoin.conf.sample
sed 's/^X//' >aricoin/files/aricoin.conf.sample << 'f3a427217040dbbe2ed0d027f9cdd6e5'
Xrpcuser=myname
X#rpcpassword=YOU MUST SET A PASSWORD
Xmaxconnections=20
Xrpcallowip=127.0.0.1
Xrpcport=12128
Xport=12127
Xserver=1
Xdaemon=1
Xlisten=1
Xlogtimestamps=1
Xaddnode=emerald.securepayment.cc
Xaddnode=198.199.90.252
Xaddnode=24.6.21.198
Xaddnode=108.27.249.69
f3a427217040dbbe2ed0d027f9cdd6e5
echo x - aricoin/files/patch-aricoin-qt_pro
sed 's/^X//' >aricoin/files/patch-aricoin-qt_pro << '438fa294474edc70033c65d0dbce165f'
X--- aricoin-qt.pro.orig	2014-08-30 05:49:14.000000000 -0400
X+++ aricoin-qt.pro	2014-10-16 20:39:48.000000000 -0400
X@@ -351,7 +351,7 @@
X LIBS += -lssl -lcrypto -ldb_cxx$$BDB_LIB_SUFFIX
X # -lgdi32 has to happen after -lcrypto (see  #681)
X windows:LIBS += -lws2_32 -lshlwapi -lmswsock -lole32 -loleaut32 -luuid -lgdi32
X-LIBS += -lboost_system$$BOOST_LIB_SUFFIX -lboost_filesystem$$BOOST_LIB_SUFFIX -lboost_program_options$$BOOST_LIB_SUFFIX -lboost_thread$$BOOST_THREAD_LIB_SUFFIX
X+LIBS += -lboost_system$$BOOST_LIB_SUFFIX -lboost_filesystem$$BOOST_LIB_SUFFIX -lboost_program_options$$BOOST_LIB_SUFFIX -lboost_thread$$BOOST_THREAD_LIB_SUFFIX -lboost_chrono$$BOOST_THREAD_LIB_SUFFIX
X windows:LIBS += -lboost_chrono$$BOOST_LIB_SUFFIX
X 
X contains(RELEASE, 1) {
438fa294474edc70033c65d0dbce165f
echo x - aricoin/files/patch-src__serialize.h
sed 's/^X//' >aricoin/files/patch-src__serialize.h << '74ec4e788b339776751e89b2bc2bfcbf'
X--- ./src/serialize.h.orig	2013-09-24 01:50:35.661706153 +0000
X+++ ./src/serialize.h	2013-09-24 01:50:52.913703572 +0000
X@@ -895,19 +895,6 @@
X     iterator insert(iterator it, const char& x=char()) { return vch.insert(it, x); }
X     void insert(iterator it, size_type n, const char& x) { vch.insert(it, n, x); }
X 
X-    void insert(iterator it, const_iterator first, const_iterator last)
X-    {
X-        assert(last - first >= 0);
X-        if (it == vch.begin() + nReadPos && (unsigned int)(last - first) <= nReadPos)
X-        {
X-            // special case for inserting at the front when there's room
X-            nReadPos -= (last - first);
X-            memcpy(&vch[nReadPos], &first[0], last - first);
X-        }
X-        else
X-            vch.insert(it, first, last);
X-    }
X-
X     void insert(iterator it, std::vector<char>::const_iterator first, std::vector<char>::const_iterator last)
X     {
X         assert(last - first >= 0);
74ec4e788b339776751e89b2bc2bfcbf
echo x - aricoin/files/patch-src__net.cpp
sed 's/^X//' >aricoin/files/patch-src__net.cpp << '37396c59b02bee4b4ce0d93acbce82de'
X--- src/net.cpp.orig	2014-01-18 04:31:19.000000000 +0000
X+++ src/net.cpp	2014-01-18 04:32:57.000000000 +0000
X@@ -58,7 +58,7 @@
X static bool vfLimited[NET_MAX] = {};
X static CNode* pnodeLocalHost = NULL;
X uint64 nLocalHostNonce = 0;
X-array<int, THREAD_MAX> vnThreadsRunning;
X+boost::array<int, THREAD_MAX> vnThreadsRunning;
X static std::vector<SOCKET> vhListenSocket;
X CAddrMan addrman;
X 
37396c59b02bee4b4ce0d93acbce82de
echo x - aricoin/files/patch-src__qt__qtipcserver.cpp
sed 's/^X//' >aricoin/files/patch-src__qt__qtipcserver.cpp << 'b7cbed641833b941b27912df41688b1b'
X--- src/qt/qtipcserver.cpp.orig	2014-01-18 05:21:31.335425774 +0000
X+++ src/qt/qtipcserver.cpp	2014-01-18 05:22:33.976421840 +0000
X@@ -21,7 +21,7 @@
X 
X static void ipcThread2(void* pArg);
X 
X-#ifdef MAC_OSX
X+#if defined(MAC_OSX) || defined(__FreeBSD__)
X // URI handling not implemented on OSX yet
X 
X void ipcInit() { }
b7cbed641833b941b27912df41688b1b
echo x - aricoin/Makefile
sed 's/^X//' >aricoin/Makefile << 'e43f5420cb4ee34c1e6c5a8fa8ce9cd3'
X# Created by: Daniel Morante <daniel@morante.net>
X# $FreeBSD$
X
XPORTNAME=	aricoin
XPORTVERSION=	1.2.0.0
XCATEGORIES=	net-p2p finance
XMASTER_SITES=	GH
X
XMAINTAINER=	daniel@morante.net
XCOMMENT=	Peer-to-Peer crypto currency using scrypt as a proof-of-work algorithm
X
XLICENSE=	MIT
X
XLIB_DEPENDS=	libboost_date_time.so:${PORTSDIR}/devel/boost-libs
X
XOPTIONS_DEFINE=	X11 UPNP QRCODES
XOPTIONS_DEFAULT=	X11 QRCODES
XUPNP_DESC=	Build with UPNP support
XQRCODES_DESC=	Build with QR code display
X
XUSE_GITHUB=	yes
XGH_ACCOUNT=	${PORTNAME}
XGH_PROJECT=	Aricoin
XGH_COMMIT=	be5e069
XGH_TAGNAME=	be5e069
X
XUSES=		gmake
XUSE_OPENSSL=	yes
XUSE_BDB=	yes
XWANT_BDB_VER=	48
X
XCXXFLAGS+=	-I${LOCALBASE}/include -I${BDB_INCLUDE_DIR}
XCXXFLAGS+=	-L${LOCALBASE}/lib -L${BDB_LIB_DIR}
XCXXFLAGS+=	-Wno-invalid-offsetof
X
X.include <bsd.port.options.mk>
X
X.if ${PORT_OPTIONS:MX11}
XPLIST_SUB+=	X11=""
X.else
XSUB_LIST+=	PORTNAME=${PORTNAME}
XUSE_RC_SUBR=	${PORTNAME}
XSUB_FILES=	pkg-message
XPLIST_SUB+=	X11="@comment "
X.endif
X
X.if ${PORT_OPTIONS:MX11}
XUSE_QT4=	corelib gui qmake_build linguist uic moc rcc
XBINARY=		${PORTNAME}-qt
XPLIST_SUB+=	HEADLESS="@comment "
X.else
XBINARY=		${PORTNAME}d
XMAKE_ARGS+=	-C ${WRKSRC}/src
XPLIST_SUB+=	HEADLESS=""
X.endif
X
X.if ${PORT_OPTIONS:MQRCODES}
XLIB_DEPENDS+=	libqrencode.so:${PORTSDIR}/graphics/libqrencode
XQMAKE_USE_QRCODE=1
X.else
XQMAKE_USE_QRCODE=0
X.endif
X
XPLIST_SUB+=	EXECUTABLE="bin/${BINARY}" \
X			PORTNAME=${PORTNAME}
X
X.if ${PORT_OPTIONS:MUPNP}
XLIB_DEPENDS+=	libminiupnpc.so:${PORTSDIR}/net/miniupnpc
XQMAKE_USE_UPNP=	1
X.else
XQMAKE_USE_UPNP=	-
X.endif
X
X.include <bsd.port.pre.mk>
X
Xpost-patch:
X	@${REINPLACE_CMD} -e 's|%%PREFIX%%|${PREFIX}|' ${WRKSRC}/src/makefile.unix
X	@${MKDIR} ${WRKSRC}/src/obj
X.if !${PORT_OPTIONS:MX11}
X	@cd ${WRKSRC}/src && ${CP} -p makefile.unix Makefile
X	@${REINPLACE_CMD} \
X		-e 's|^USE_UPNP.*$$|USE_UPNP=${QMAKE_USE_UPNP}|' \
X		-e 's|-l pthread|${PTHREAD_LIBS}|g' \
X		-e 's:-l dl::' \
X		${WRKSRC}/src/Makefile
X.endif
X
Xdo-configure:
X.if ${PORT_OPTIONS:MX11}
X	cd ${WRKSRC} && ${SETENV} ${QMAKE_ENV} \
X		${QMAKE} ${QMAKE_ARGS} USE_UPNP=${QMAKE_USE_UPNP} USE_QRCODE=${QMAKE_USE_QRCODE} \
X		QMAKE_LRELEASE=lrelease-qt4 PREFIX=${PREFIX} INCLUDEPATH=${BDB_INCLUDE_DIR} \
X		QMAKE_LIBDIR+=${BDB_LIB_DIR} ${PORTNAME}-qt.pro
X.endif
X
Xdo-install:
X.if ${PORT_OPTIONS:MX11}
X	${INSTALL_PROGRAM} -s ${WRKSRC}/${BINARY} ${STAGEDIR}${PREFIX}/bin/${BINARY}
X	${REINPLACE_CMD} -e 's,=/usr,=${PREFIX},' \
X		-e 's,bitcoin,${PORTNAME},g' \
X		-e 's,80\.xpm,.png,g' \
X		-e 's,Bitcoin,${GH_PROJECT},g' \
X		-e 's,128,,g' ${WRKSRC}/contrib/debian/bitcoin-qt.desktop
X	${INSTALL} ${WRKSRC}/contrib/debian/bitcoin-qt.desktop ${STAGEDIR}${PREFIX}/share/applications/${PORTNAME}-qt.desktop
X	${INSTALL} ${WRKSRC}/src/qt/res/icons/bitcoin.png ${STAGEDIR}${PREFIX}/share/pixmaps/${PORTNAME}.png
X
X.else
X	${INSTALL_PROGRAM} -s ${WRKSRC}/src/${GH_PROJECT}d ${STAGEDIR}${PREFIX}/bin/${BINARY}
X	${INSTALL} ${FILESDIR}/${PORTNAME}.conf.sample ${STAGEDIR}${PREFIX}/etc/${PORTNAME}.conf.sample
X	@if [ ! -f ${PREFIX}/etc/${PORTNAME}.conf ]; then \
X		${CP} -p ${FILESDIR}/${PORTNAME}.conf.sample ${STAGEDIR}${PREFIX}/etc/${PORTNAME}.conf; \
X	fi
X.endif
X
X.include <bsd.port.post.mk>
e43f5420cb4ee34c1e6c5a8fa8ce9cd3
echo x - aricoin/pkg-descr
sed 's/^X//' >aricoin/pkg-descr << '448dbf8569e44ada1ff80743a00deff5'
XAricoin is a free open source peer-to-peer electronic cash system that
Xis completely decentralized, without the need for a central server or
Xtrusted parties. Users hold the crypto keys to their own money and
Xtransact directly with each other, with the help of a P2P network to
Xcheck for double-spending.
X
XWWW:  http://aricoin.net
448dbf8569e44ada1ff80743a00deff5
echo x - aricoin/distinfo
sed 's/^X//' >aricoin/distinfo << '3f2414303947af671c90d7209838bf7d'
XSHA256 (aricoin-1.2.0.0.tar.gz) = b0ed5748348a79232451719a6b166d53aa1b58e38aabb9fad8e3680a6ff0a479
XSIZE (aricoin-1.2.0.0.tar.gz) = 3092083
3f2414303947af671c90d7209838bf7d
echo x - aricoin/pkg-plist
sed 's/^X//' >aricoin/pkg-plist << 'd0aa56a981f33b17b54a373f38e11d8e'
X%%EXECUTABLE%%
X%%X11%%share/applications/%%PORTNAME%%-qt.desktop
X%%X11%%share/pixmaps/%%PORTNAME%%.png
X%%HEADLESS%%@unexec if cmp -s %D/etc/%%PORTNAME%%.conf.sample %D/etc/%%PORTNAME%%.conf; then rm -f %D/etc/%%PORTNAME%%.conf; fi
X%%HEADLESS%%etc/%%PORTNAME%%.conf.sample
X%%HEADLESS%%@exec if [ ! -f %D/etc/%%PORTNAME%%.conf ] ; then cp -p %D/%F %B/%%PORTNAME%%.conf; fi
d0aa56a981f33b17b54a373f38e11d8e
exit

