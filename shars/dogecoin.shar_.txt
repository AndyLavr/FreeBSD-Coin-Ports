# This is a shell archive.  Save it in a file, remove anything before
# this line, and then unpack it by entering "sh file".  Note, it may
# create directories; files and directories will be owned by you and
# have default permissions.
#
# This archive contains:
#
#	dogecoin
#	dogecoin/files
#	dogecoin/files/patch-Makefile_include_editSedCommands.patch
#	dogecoin/files/patch-qt_makefile_am_editSedCommands.patch
#	dogecoin/files/pkg-message.in
#	dogecoin/files/dogecoin.in
#	dogecoin/files/dogecoin-qt.desktop.in
#	dogecoin/files/dogecoin.conf.sample
#	dogecoin/files/patch-src__scrypt.cpp
#	dogecoin/files/patch-src__scrypt.h
#	dogecoin/files/patch-src-util.h
#	dogecoin/Makefile
#	dogecoin/distinfo
#	dogecoin/pkg-descr
#	dogecoin/pkg-plist
#
echo c - dogecoin
mkdir -p dogecoin > /dev/null 2>&1
echo c - dogecoin/files
mkdir -p dogecoin/files > /dev/null 2>&1
echo x - dogecoin/files/patch-Makefile_include_editSedCommands.patch
sed 's/^X//' >dogecoin/files/patch-Makefile_include_editSedCommands.patch << 'ad356c9b99b97cfbe67657181eaf8b1d'
Xdiff --git a/src/Makefile.include b/src/Makefile.include
Xindex 2fc6cd7..cdd16f5 100644
X--- a/src/Makefile.include
X+++ src/Makefile.include
X@@ -40,18 +40,18 @@ $(LIBBITCOINQT):
X ui_%.h: %.ui
X 	@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)
X 	@test -f $(UIC) && QT_SELECT=$(QT_SELECT) $(UIC) -o $(abs_builddir)/$@ $(abs_srcdir)/$< || echo error: could not build $(abs_builddir)/$@
X-	$(SED) -e '/^\*\*.*Created:/d' $(abs_builddir)/$@ > $(abs_builddir)/$@.n && mv $(abs_builddir)/$@{.n,}
X-	$(SED) -e '/^\*\*.*by:/d' $(abs_builddir)/$@ > $(abs_builddir)/$@.n && mv $(abs_builddir)/$@{.n,}
X+	$(SED) -e '/^\*\*.*Created:/d' $(abs_builddir)/$@ > $(abs_builddir)/$@.n && mv $(abs_builddir)/$@.n $(abs_builddir)/$@
X+	$(SED) -e '/^\*\*.*by:/d' $(abs_builddir)/$@ > $(abs_builddir)/$@.n && mv $(abs_builddir)/$@.n $(abs_builddir)/$@
X 
X %.moc: %.cpp
X 	QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<
X-	$(SED) -e '/^\*\*.*Created:/d' $@ > $@.n && mv $@{.n,}
X-	$(SED) -e '/^\*\*.*by:/d' $@ > $@.n && mv $@{.n,}
X+	$(SED) -e '/^\*\*.*Created:/d' $@ > $@.n && mv $@.n $(abs_builddir)/$@
X+	$(SED) -e '/^\*\*.*by:/d' $@ > $@.n && mv $@.n $(abs_builddir)/$@
X 
X moc_%.cpp: %.h
X 	QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<
X-	$(SED) -e '/^\*\*.*Created:/d' $@ > $@.n && mv $@{.n,}
X-	$(SED) -e '/^\*\*.*by:/d' $@ > $@.n && mv $@{.n,}
X+	$(SED) -e '/^\*\*.*Created:/d' $@ > $@.n && mv $@.n $(abs_builddir)/$@
X+	$(SED) -e '/^\*\*.*by:/d' $@ > $@.n && mv $@.n $(abs_builddir)/$@
X 
X %.qm: %.ts
X 	@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)
ad356c9b99b97cfbe67657181eaf8b1d
echo x - dogecoin/files/patch-qt_makefile_am_editSedCommands.patch
sed 's/^X//' >dogecoin/files/patch-qt_makefile_am_editSedCommands.patch << '355183d3f02310cc86a7cd759a877618'
Xdiff --git a/src/qt/Makefile.am b/src/qt/Makefile.am
Xindex 648971b..97b2ec4 100644
X--- a/src/qt/Makefile.am
X+++ src/qt/Makefile.am
X@@ -373,7 +373,7 @@ translate: bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_CPP) $(
X $(QT_QRC_CPP): $(QT_QRC) $(QT_QM) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(PROTOBUF_H)
X 	@cd $(abs_srcdir); test -f $(RCC) && QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin -o $(abs_builddir)/$@ $< || \
X 	  echo error: could not build $@
X-	$(SED) -e '/^\*\*.*Created:/d' $@ > $@.n && mv $@{.n,}
X-	$(SED) -e '/^\*\*.*by:/d' $@  > $@.n && mv $@{.n,}
X+	$(SED) -e '/^\*\*.*Created:/d' $@ > $@.n && mv $@.n $@
X+	$(SED) -e '/^\*\*.*by:/d' $@  > $@.n && mv $@.n $@
X 
X CLEANFILES = $(BUILT_SOURCES) $(QT_QM) $(QT_FORMS_H) *.gcda *.gcno
355183d3f02310cc86a7cd759a877618
echo x - dogecoin/files/pkg-message.in
sed 's/^X//' >dogecoin/files/pkg-message.in << 'cd71ccd0ae459617ad2616f676b3dd3b'
X*******************************************************************
XTo configure the Dogecoin server please edit: 
X%%PREFIX%%/etc/%%PORTNAME%%.conf
X
XYou must at least set a "rpcpassword" in the configuration file above.
X
XTo run the %%PORTNAME%%d server at startup, add the following
Xsettings to your /etc/rc.conf
X
X%%PORTNAME%%_enable="YES"
X
X*******************************************************************
cd71ccd0ae459617ad2616f676b3dd3b
echo x - dogecoin/files/dogecoin.in
sed 's/^X//' >dogecoin/files/dogecoin.in << 'a61aa4fb07e153a6b10c4593f0bbdee6'
X#!/bin/sh
X#
X# $FreeBSD$
X#
X
X# PROVIDE: %%PORTNAME%%
X# REQUIRE: LOGIN
X# KEYWORD: shutdown
X
X#
X# Add the following lines to /etc/rc.conf.local or /etc/rc.conf
X# to enable this service:
X#
X# %%PORTNAME%%_enable (bool):	Set to NO by default.
X#				Set it to YES to enable %%PORTNAME%%.
X# %%PORTNAME%%_config (path):	Set to %%PREFIX%%/etc/%%PORTNAME%%.conf
X#				by default.
X# %%PORTNAME%%_user:	The user account %%PORTNAME%% daemon runs as
X#				It uses '%%PORTNAME%%' user by default.
X# %%PORTNAME%%_group:	The group account %%PORTNAME%% daemon runs as
X#				It uses '%%PORTNAME%%' group by default.
X# %%PORTNAME%%_datadir (str):	Default to "/var/db/%%PORTNAME%%"
X#				Base data directory.
X
X. /etc/rc.subr
X
Xname=%%PORTNAME%%
Xrcvar=%%PORTNAME%%_enable
X
X: ${%%PORTNAME%%_enable:=NO}
X: ${%%PORTNAME%%_config=%%PREFIX%%/etc/%%PORTNAME%%.conf}
X: ${%%PORTNAME%%_datadir=/var/db/%%PORTNAME%%}
X: ${%%PORTNAME%%_user="root"}
X: ${%%PORTNAME%%_group="wheel"}
X
Xrequired_files=${%%PORTNAME%%_config}
Xcommand=%%PREFIX%%/bin/%%PORTNAME%%d
X%%PORTNAME%%_chdir=${%%PORTNAME%%_datadir}
Xpidfile="${%%PORTNAME%%_datadir}/%%PORTNAME%%d.pid"
Xstop_cmd=%%PORTNAME%%_stop
Xcommand_args="-conf=${%%PORTNAME%%_config} -datadir=${%%PORTNAME%%_datadir} -noupnp -daemon -pid=${pidfile}"
Xstart_precmd="${name}_prestart"
X
X%%PORTNAME%%_create_datadir()
X{
X	echo "Creating data directory"
X	eval mkdir -p ${%%PORTNAME%%_datadir}
X	[ $? -eq 0 ] && chown -R ${%%PORTNAME%%_user}:${%%PORTNAME%%_group} ${%%PORTNAME%%_datadir}
X}
X
X%%PORTNAME%%_prestart()
X{
X	if [ ! -d "${%%PORTNAME%%_datadir}/." ]; then
X		%%PORTNAME%%_create_datadir || return 1
X	fi
X}
X
X%%PORTNAME%%_requirepidfile()
X{
X	if [ ! "0`check_pidfile ${pidfile} ${command}`" -gt 1 ]; then
X		echo "${name} not running? (check $pidfile)."
X		exit 1
X	fi
X}
X
X%%PORTNAME%%_stop()
X{
X    %%PORTNAME%%_requirepidfile
X
X	echo "Stopping ${name}."
X	eval ${command} -conf=${%%PORTNAME%%_config} -datadir=${%%PORTNAME%%_datadir} stop
X	wait_for_pids ${rc_pid}
X}
X
Xload_rc_config $name
Xrun_rc_command "$1"
a61aa4fb07e153a6b10c4593f0bbdee6
echo x - dogecoin/files/dogecoin-qt.desktop.in
sed 's/^X//' >dogecoin/files/dogecoin-qt.desktop.in << '64b811f48f2f7cc06419a6e07ed344c8'
X[Desktop Entry]
XEncoding=UTF-8
XName=Dogecoin
XComment=Dogecoin P2P Cryptocurrency
XExec=%%PREFIX%%/bin/%%PORTNAME%%-qt %u
XTerminal=false
XType=Application
XIcon=%%PREFIX%%/share/pixmaps/%%PORTNAME%%.png
XMimeType=x-scheme-handler/%%PORTNAME%%;
XCategories=Office;
64b811f48f2f7cc06419a6e07ed344c8
echo x - dogecoin/files/dogecoin.conf.sample
sed 's/^X//' >dogecoin/files/dogecoin.conf.sample << '0590de81234c86928f5c3eb8c33901c3'
Xrpcuser=myname
X#rpcpassword=YOU MUST SET A PASSWORD
Xmaxconnections=20
Xrpcallowip=127.0.0.1
Xrpcport=22555
Xport=22556
Xserver=1
Xdaemon=1
Xlisten=1
Xlogtimestamps=1
Xaddnode=dogecoin.securepayment.cc
0590de81234c86928f5c3eb8c33901c3
echo x - dogecoin/files/patch-src__scrypt.cpp
sed 's/^X//' >dogecoin/files/patch-src__scrypt.cpp << '1ac44c50a7543b7c83494e8163c75468'
X--- src/scrypt.cpp.orig	2014-08-24 11:09:34.000000000 -0400
X+++ src/scrypt.cpp	2014-10-17 22:19:02.000000000 -0400
X@@ -35,6 +35,7 @@
X #include <stdint.h>
X #include <string.h>
X #include <openssl/sha.h>
X+#include <boost/lexical_cast.hpp>
X 
X #if defined(USE_SSE2) && !defined(USE_SSE2_ALWAYS)
X #ifdef _MSC_VER
X@@ -46,22 +47,6 @@
X #endif
X #endif
X 
X-static inline uint32_t be32dec(const void *pp)
X-{
X-	const uint8_t *p = (uint8_t const *)pp;
X-	return ((uint32_t)(p[3]) + ((uint32_t)(p[2]) << 8) +
X-	    ((uint32_t)(p[1]) << 16) + ((uint32_t)(p[0]) << 24));
X-}
X-
X-static inline void be32enc(void *pp, uint32_t x)
X-{
X-	uint8_t *p = (uint8_t *)pp;
X-	p[3] = x & 0xff;
X-	p[2] = (x >> 8) & 0xff;
X-	p[1] = (x >> 16) & 0xff;
X-	p[0] = (x >> 24) & 0xff;
X-}
X-
X typedef struct HMAC_SHA256Context {
X 	SHA256_CTX ictx;
X 	SHA256_CTX octx;
1ac44c50a7543b7c83494e8163c75468
echo x - dogecoin/files/patch-src__scrypt.h
sed 's/^X//' >dogecoin/files/patch-src__scrypt.h << '6aa49ffb37e8fd2829d41065fb280162'
X--- src/scrypt.h.orig	2014-08-24 11:09:34.000000000 -0400
X+++ src/scrypt.h	2014-10-17 22:21:30.000000000 -0400
X@@ -29,19 +29,4 @@
X PBKDF2_SHA256(const uint8_t *passwd, size_t passwdlen, const uint8_t *salt,
X     size_t saltlen, uint64_t c, uint8_t *buf, size_t dkLen);
X 
X-static inline uint32_t le32dec(const void *pp)
X-{
X-        const uint8_t *p = (uint8_t const *)pp;
X-        return ((uint32_t)(p[0]) + ((uint32_t)(p[1]) << 8) +
X-            ((uint32_t)(p[2]) << 16) + ((uint32_t)(p[3]) << 24));
X-}
X-
X-static inline void le32enc(void *pp, uint32_t x)
X-{
X-        uint8_t *p = (uint8_t *)pp;
X-        p[0] = x & 0xff;
X-        p[1] = (x >> 8) & 0xff;
X-        p[2] = (x >> 16) & 0xff;
X-        p[3] = (x >> 24) & 0xff;
X-}
X #endif
X\ No newline at end of file
6aa49ffb37e8fd2829d41065fb280162
echo x - dogecoin/files/patch-src-util.h
sed 's/^X//' >dogecoin/files/patch-src-util.h << 'e5628c98878f8b553545cc7177c3833f'
X--- src/util.h.orig	2014-08-24 11:09:34.000000000 -0400
X+++ src/util.h	2014-10-17 22:23:33.000000000 -0400
X@@ -24,6 +24,7 @@
X #include <string>
X #include <utility>
X #include <vector>
X+#include <cstdarg>
X 
X #ifndef WIN32
X #include <sys/resource.h>
e5628c98878f8b553545cc7177c3833f
echo x - dogecoin/Makefile
sed 's/^X//' >dogecoin/Makefile << 'c0c65fd7624e7a00b944f40ed85e976b'
X# Created by: Daniel Morante <daniel@morante.net>
X# $FreeBSD$
X
XPORTNAME=	dogecoin
XPORTVERSION=	1.8.0
XCATEGORIES=	net-p2p finance
XMASTER_SITES=	GH
X
XMAINTAINER=	swills@FreeBSD.org
XCOMMENT=	Virtual Peer-to-Peer Currency Client
X
XLICENSE=	MIT
X
XBUILD_DEPENDS=	pkg-config:${PORTSDIR}/devel/pkgconf
XLIB_DEPENDS=	libboost_date_time.so:${PORTSDIR}/devel/boost-libs
X
XUSE_GITHUB=	yes
XGH_ACCOUNT=	${PORTNAME}
XGH_COMMIT=	c4209a3 
XGH_TAGNAME=	v${PORTVERSION}
X
XOPTIONS_DEFINE=	X11 UPNP WALLET CLI TEST
XOPTIONS_SUB=	yes
X
XWALLET_DESC=	Build wallet or P2P server node only
XQRCODES_DESC=	Enable QR code display when building graphical interface
XCLI_DESC=	Build command line RPC client
X
XOPTIONS_DEFAULT=	X11 WALLET QRCODES
XOPTIONS_GROUP=	X11
XOPTIONS_GROUP_X11=	QRCODES
X
XUPNP_CONFIGURE_WITH=	miniupnpc
XUPNP_LIB_DEPENDS=	libminiupnpc.so:${PORTSDIR}/net/miniupnpc
X
XX11_CONFIGURE_WITH=	gui
XX11_CONFIGURE_ON=	--without-daemon
XX11_CONFIGURE_OFF=	--with-daemon
XX11_BUILD_DEPENDS=	protoc:${PORTSDIR}/devel/protobuf
XX11_USE=	qt4=corelib,gui,qmake_build,linguist,uic,moc,rcc,qtestlib_build
XX11_USES=	desktop-file-utils
X
XWALLET_CONFIGURE_ENABLE=	wallet
XWALLET_CONFIGURE_WITH=	incompatible-bdb
XWALLET_CXXFLAGS=	-I${BDB_INCLUDE_DIR} -L${BDB_LIB_DIR}
XWALLET_USE=	bdb=yes
X
XQRCODES_LIB_DEPENDS=	libqrencode.so:${PORTSDIR}/graphics/libqrencode
XQRCODES_CONFIGURE_WITH=	qrencode
X
XCLI_CONFIGURE_WITH=	cli
X
XTEST_CONFIGURE_ENABLE=	tests
XTEST_ALL_TARGET=	check
X
XAUTOMAKE_ARGS+=	--add-missing
XUSE_AUTOTOOLS=	aclocal autoheader automake autoconf
XCONFIGURE_ENV=	SSL_LIBS="-lssl" CRYPTO_LIBS="-lcrypto" SSL_CFLAGS="-I/usr/include" CRYPTO_CFLAGS="-I/usr/include"
X
XUSES=		gmake
XUSE_OPENSSL=	yes
XWANT_BDB_VER=	5
X
XCXXFLAGS+=	-I${LOCALBASE}/include
XCXXFLAGS+=	-L${LOCALBASE}/lib
XCXXFLAGS+=	-Wno-invalid-offsetof
X
XQT_BINARY=		${PORTNAME}-qt
XCLI_BINARY=		${PORTNAME}-cli
XDAEMON=		${PORTNAME}d
X
XPLIST_SUB+=	EXECUTABLE_QT=bin/${QT_BINARY} \
X			EXECUTABLE_CLI=bin/${CLI_BINARY} \
X			EXECUTABLE_DAEMON=bin/${DAEMON} \
X			PORTNAME=${PORTNAME}
X
X.include <bsd.port.options.mk>
X
X.if empty(PORT_OPTIONS:MX11) && !empty(PORT_OPTIONS:MQRCODES)
XBROKEN=	QRCODES requires X11 support.  Run 'make config' again!
X.endif
X
X# tests will currently fail
X.if ${PORT_OPTIONS:MTEST}
XBROKEN=	automated testing fails
X.endif
X
XSUB_LIST+=	PORTNAME=${PORTNAME}
X.if ! ${PORT_OPTIONS:MX11}
XUSE_RC_SUBR=	${PORTNAME}
XSUB_FILES=	pkg-message
X.else
XSUB_FILES=	${PORTNAME}-qt.desktop
X.endif
X
Xpost-patch:
X	${MKDIR} ${WRKSRC}/src/build-aux
X
Xdo-install:
X.if ${PORT_OPTIONS:MCLI}
X	${INSTALL_PROGRAM} -s ${WRKSRC}/src/${CLI_BINARY} ${STAGEDIR}${PREFIX}/bin/${CLI_BINARY}
X.endif
X
X.if ${PORT_OPTIONS:MX11}
X	${INSTALL_PROGRAM} -s ${WRKSRC}/src/qt/${QT_BINARY} ${STAGEDIR}${PREFIX}/bin/${QT_BINARY}
X	${INSTALL} ${WRKDIR}/${PORTNAME}-qt.desktop ${STAGEDIR}${PREFIX}/share/applications/${PORTNAME}-qt.desktop
X	${INSTALL} ${WRKSRC}/src/qt/res/icons/bitcoin.png ${STAGEDIR}${PREFIX}/share/pixmaps/${PORTNAME}.png
X.else
X	${INSTALL_PROGRAM} -s ${WRKSRC}/src/${DAEMON} ${STAGEDIR}${PREFIX}/bin/${DAEMON}
X	${INSTALL_DATA} ${FILESDIR}/${PORTNAME}.conf.sample ${STAGEDIR}${PREFIX}/etc/${PORTNAME}.conf.sample
X.endif
X
X.include <bsd.port.mk>
c0c65fd7624e7a00b944f40ed85e976b
echo x - dogecoin/distinfo
sed 's/^X//' >dogecoin/distinfo << '18832ea898ca3b6e5665e4d11ebb5dca'
XSHA256 (dogecoin-1.8.0.tar.gz) = 8eb2d30175cda6065f9dc8e2b6a937eb0e638119fec3966ed3ec0afa87743680
XSIZE (dogecoin-1.8.0.tar.gz) = 8049394
18832ea898ca3b6e5665e4d11ebb5dca
echo x - dogecoin/pkg-descr
sed 's/^X//' >dogecoin/pkg-descr << '90e1b4a1fff2823a756f96d64df08cd0'
XDogecoin is a free open source peer-to-peer electronic cash system that
Xis completely decentralized, without the need for a central server or
Xtrusted parties. Users hold the crypto keys to their own money and
Xtransact directly with each other, with the help of a P2P network to
Xcheck for double-spending.
X
XWWW: http://dogecoin.com/
90e1b4a1fff2823a756f96d64df08cd0
echo x - dogecoin/pkg-plist
sed 's/^X//' >dogecoin/pkg-plist << '9c70c0f1314d9f1af965cb03cbd14f7d'
X%%NO_X11%%%%EXECUTABLE_DAEMON%%
X%%NO_X11%%@sample etc/%%PORTNAME%%.conf.sample
X%%CLI%%%%EXECUTABLE_CLI%%
X%%X11%%%%EXECUTABLE_QT%%
X%%X11%%share/applications/%%PORTNAME%%-qt.desktop
X%%X11%%share/pixmaps/%%PORTNAME%%.png
9c70c0f1314d9f1af965cb03cbd14f7d
exit

