# This is a shell archive.  Save it in a file, remove anything before
# this line, and then unpack it by entering "sh file".  Note, it may
# create directories; files and directories will be owned by you and
# have default permissions.
#
# This archive contains:
#
#	heavycoin
#	heavycoin/files
#	heavycoin/files/patch-src-makefile_unix
#	heavycoin/files/pkg-message.in
#	heavycoin/files/extra-patch-endian
#	heavycoin/files/patch-src-int_cpp
#	heavycoin/files/heavycoin.in
#	heavycoin/files/heavycoin.conf.sample
#	heavycoin/files/patch-heavycoin-qt_pro
#	heavycoin/Makefile
#	heavycoin/pkg-descr
#	heavycoin/pkg-plist
#	heavycoin/distinfo
#
echo c - heavycoin
mkdir -p heavycoin > /dev/null 2>&1
echo c - heavycoin/files
mkdir -p heavycoin/files > /dev/null 2>&1
echo x - heavycoin/files/patch-src-makefile_unix
sed 's/^X//' >heavycoin/files/patch-src-makefile_unix << '7a53213b3b526ff1a127510846359ebb'
X--- src/makefile.unix.orig	2014-03-14 06:25:25.000000000 -0400
X+++ src/makefile.unix	2014-03-14 06:25:33.000000000 -0400
X@@ -15,6 +15,11 @@
X 
X DEFS=-DBOOST_SPIRIT_THREADSAFE -D_FILE_OFFSET_BITS=64
X 
X+BOOST_INCLUDE_PATH=%%PREFIX%%/include
X+BDB_INCLUDE_PATH=%%PREFIX%%/include/db48
X+BOOST_LIB_PATH=%%PREFIX%%/lib
X+BDB_LIB_PATH=%%PREFIX%%/lib/db48
X+
X DEFS += $(addprefix -I,$(CURDIR) $(CURDIR)/obj $(BOOST_INCLUDE_PATH) $(BDB_INCLUDE_PATH) $(OPENSSL_INCLUDE_PATH))
X LIBS = $(addprefix -L,$(BOOST_LIB_PATH) $(BDB_LIB_PATH) $(OPENSSL_LIB_PATH))
X 
X@@ -38,6 +43,7 @@
X    -l boost_filesystem$(BOOST_LIB_SUFFIX) \
X    -l boost_program_options$(BOOST_LIB_SUFFIX) \
X    -l boost_thread$(BOOST_LIB_SUFFIX) \
X+   -l boost_chrono$(BOOST_LIB_SUFFIX) \
X    -l db_cxx$(BDB_LIB_SUFFIX) \
X    -l ssl \
X    -l crypto
X@@ -61,7 +67,6 @@
X LIBS+= \
X  -Wl,-B$(LMODE2) \
X    -l z \
X-   -l dl \
X    -l pthread
X 
X 
7a53213b3b526ff1a127510846359ebb
echo x - heavycoin/files/pkg-message.in
sed 's/^X//' >heavycoin/files/pkg-message.in << '1b2303470c5db57a0f60aee8473f9c3a'
X*******************************************************************
XTo configure the Heavycoin server please edit: 
X%%PREFIX%%/etc/heavycoin.conf
X
XYou must at least set a "rpcpassword" in the configuration file above.
X
XTo run the heavycoind server at startup, add the following
Xsettings to your /etc/rc.conf
X
Xheavycoin_enable="YES"
X
X*******************************************************************
1b2303470c5db57a0f60aee8473f9c3a
echo x - heavycoin/files/extra-patch-endian
sed 's/^X//' >heavycoin/files/extra-patch-endian << 'eab74d81d74cdf64329a394262cc7e53'
X--- src/scrypt.cpp.orig	2013-12-09 18:10:12.046606050 +0000
X+++ src/scrypt.cpp	2013-12-09 18:10:25.898605023 +0000
X@@ -34,22 +34,6 @@
X #include <string.h>
X #include <openssl/sha.h>
X 
X-static inline uint32_t be32dec(const void *pp)
X-{
X-	const uint8_t *p = (uint8_t const *)pp;
X-	return ((uint32_t)(p[3]) + ((uint32_t)(p[2]) << 8) +
X-	    ((uint32_t)(p[1]) << 16) + ((uint32_t)(p[0]) << 24));
X-}
X-
X-static inline void be32enc(void *pp, uint32_t x)
X-{
X-	uint8_t *p = (uint8_t *)pp;
X-	p[3] = x & 0xff;
X-	p[2] = (x >> 8) & 0xff;
X-	p[1] = (x >> 16) & 0xff;
X-	p[0] = (x >> 24) & 0xff;
X-}
X-
X typedef struct HMAC_SHA256Context {
X 	SHA256_CTX ictx;
X 	SHA256_CTX octx;
eab74d81d74cdf64329a394262cc7e53
echo x - heavycoin/files/patch-src-int_cpp
sed 's/^X//' >heavycoin/files/patch-src-int_cpp << '9f6b4f43dd8372fb34c12b8910b3ff51'
X--- src/init.cpp.orig	2014-03-09 06:49:17.000000000 -0400
X+++ src/init.cpp	2014-03-14 06:36:16.000000000 -0400
X@@ -532,7 +532,7 @@
X     // Make sure enough file descriptors are available
X     int nBind = std::max((int)mapArgs.count("-bind"), 1);
X     nMaxConnections = GetArg("-maxconnections", 125);
X-    nMaxConnections = std::max(std::min(nMaxConnections, FD_SETSIZE - nBind - MIN_CORE_FILEDESCRIPTORS), 0);
X+    nMaxConnections = std::max(std::min(nMaxConnections, (int)(FD_SETSIZE - nBind - MIN_CORE_FILEDESCRIPTORS)), 0);
X     int nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS);
X     if (nFD < MIN_CORE_FILEDESCRIPTORS)
X         return InitError(_("Not enough file descriptors available."));
9f6b4f43dd8372fb34c12b8910b3ff51
echo x - heavycoin/files/heavycoin.in
sed 's/^X//' >heavycoin/files/heavycoin.in << '9ef85d25f79e0b9afd81503161b6d674'
X#!/bin/sh
X#
X# $FreeBSD$
X#
X
X# PROVIDE: heavycoin
X# REQUIRE: LOGIN
X# KEYWORD: shutdown
X
X#
X# Add the following lines to /etc/rc.conf.local or /etc/rc.conf
X# to enable this service:
X#
X# heavycoin_enable (bool):	Set to NO by default.
X#				Set it to YES to enable heavycoin.
X# heavycoin_config (path):	Set to %%PREFIX%%/etc/heavycoin.conf
X#				by default.
X# heavycoin_datadir (str):	Default to "/var/db/heavycoin"
X#				Base data directory.
X
X. /etc/rc.subr
X
Xname=heavycoin
Xrcvar=heavycoin_enable
X
X: ${heavycoin_enable:=NO}
X: ${heavycoin_config=%%PREFIX%%/etc/heavycoin.conf}
X: ${heavycoin_datadir=/var/db/heavycoin}
X
Xrequired_files=${heavycoin_config}
Xcommand=%%PREFIX%%/bin/heavycoind
Xheavycoin_chdir=${heavycoin_datadir}
Xpidfile="${heavycoin_datadir}/heavycoind.pid"
Xstop_cmd=heavycoin_stop
Xcommand_args="-conf=${heavycoin_config} -datadir=${heavycoin_datadir} -noupnp -daemon -pid=${pidfile}"
Xstart_precmd="${name}_prestart"
X
Xheavycoin_create_datadir()
X{
X	echo "Creating data directory"
X	eval mkdir -p ${heavycoin_datadir}
X}
X
Xheavycoin_prestart()
X{
X	if [ ! -d "${heavycoin_datadir}/." ]; then
X		heavycoin_create_datadir || return 1
X	fi
X}
X
Xheavycoin_requirepidfile()
X{
X	if [ ! "0`check_pidfile ${pidfile} ${command}`" -gt 1 ]; then
X		echo "${name} not running? (check $pidfile)."
X		exit 1
X	fi
X}
X
Xheavycoin_stop()
X{
X    heavycoin_requirepidfile
X
X    if checkyesno ${rcvar}; then
X		echo "Stopping ${name}."
X		eval ${command} -conf=${heavycoin_config} -datadir=${heavycoin_datadir} stop
X		wait_for_pids ${pidfile}
X    fi
X}
X
Xload_rc_config $name
Xrun_rc_command "$1"
9ef85d25f79e0b9afd81503161b6d674
echo x - heavycoin/files/heavycoin.conf.sample
sed 's/^X//' >heavycoin/files/heavycoin.conf.sample << 'f0c48f99e5a1cda88237fabffbf35f0f'
Xrpcuser=myname
X#rpcpassword=YOU MUST SET A PASSWORD
Xmaxconnection=20
Xrpcallowip=127.0.0.1
Xrpcport=7202
Xport=7203
Xserver=1
Xdaemon=1
Xlisten=1
Xlogtimestamps=1
Xaddnode=63.247.147.163
Xaddnode=172.245.221.171
Xaddnode=94.102.53.183
Xaddnode=198.52.200.43
Xaddnode=node01.heavycoin.cc
f0c48f99e5a1cda88237fabffbf35f0f
echo x - heavycoin/files/patch-heavycoin-qt_pro
sed 's/^X//' >heavycoin/files/patch-heavycoin-qt_pro << '392694e8ad4f69bac21b28b8bf7c6be4'
X--- heavycoin-qt.pro.orig	2014-03-09 06:49:17.000000000 -0400
X+++ heavycoin-qt.pro	2014-03-14 06:24:20.000000000 -0400
X@@ -420,7 +420,7 @@
X LIBS += -lssl -lcrypto -ldb_cxx$$BDB_LIB_SUFFIX
X # -lgdi32 has to happen after -lcrypto (see  #681)
X win32:LIBS += -lws2_32 -lshlwapi -lmswsock -lole32 -loleaut32 -luuid -lgdi32
X-LIBS += -lboost_system$$BOOST_LIB_SUFFIX -lboost_filesystem$$BOOST_LIB_SUFFIX -lboost_program_options$$BOOST_LIB_SUFFIX -lboost_thread$$BOOST_THREAD_LIB_SUFFIX
X+LIBS += -lboost_system$$BOOST_LIB_SUFFIX -lboost_filesystem$$BOOST_LIB_SUFFIX -lboost_program_options$$BOOST_LIB_SUFFIX -lboost_thread$$BOOST_THREAD_LIB_SUFFIX -lboost_chrono$$BOOST_THREAD_LIB_SUFFIX
X win32:LIBS += -lboost_chrono$$BOOST_LIB_SUFFIX
X macx:LIBS += -lboost_chrono$$BOOST_LIB_SUFFIX
X 
392694e8ad4f69bac21b28b8bf7c6be4
echo x - heavycoin/Makefile
sed 's/^X//' >heavycoin/Makefile << 'fa1f517f9294134a300c07d7187a5869'
X# Created by: Daniel Morante <daniel@morante.net>
X# $FreeBSD$
X
XPORTNAME=	heavycoin
XPORTVERSION=	1.2
XCATEGORIES=	net-p2p finance
XMASTER_SITES=	GH
X
XMAINTAINER=	daniel@morante.net
XCOMMENT=	Peer-to-Peer crypto currency using scrypt as a proof-of-work algorithm
X
XLICENSE=	MIT
X
XLIB_DEPENDS=	libboost_date_time.so:${PORTSDIR}/devel/boost-libs
X
XOPTIONS_DEFINE=	X11 UPNP QRCODES
XOPTIONS_DEFAULT=	X11 QRCODES
XUPNP_DESC=	Build with UPNP support
XQRCODES_DESC=	Build with QR code display
X
XUSE_GITHUB=	yes
XGH_ACCOUNT=	${PORTNAME}
XGH_PROJECT=	${PORTNAME}
XGH_COMMIT=	f890f6d
XGH_TAGNAME=	f890f6d
X
XUSES=		gmake
XUSE_OPENSSL=	yes
XUSE_BDB=	yes
XWANT_BDB_VER=	48
X
XCXXFLAGS+=	-I${LOCALBASE}/include -I${BDB_INCLUDE_DIR}
XCXXFLAGS+=	-L${LOCALBASE}/lib -L${BDB_LIB_DIR}
XCXXFLAGS+=	-Wno-invalid-offsetof
X
X.include <bsd.port.options.mk>
X
X.if ${PORT_OPTIONS:MX11}
XPLIST_SUB+=	X11=""
X.else
XUSE_RC_SUBR=	${PORTNAME}
XSUB_FILES=	pkg-message
XPLIST_SUB+=	X11="@comment "
X.endif
X
X.if ${PORT_OPTIONS:MX11}
XUSE_QT4=	corelib gui qmake_build linguist uic moc rcc
XBINARY=		${PORTNAME}-qt
XPLIST_SUB+=	HEADLESS="@comment "
X.else
XBINARY=		${PORTNAME}d
XMAKE_ARGS+=	-C ${WRKSRC}/src
XPLIST_SUB+=	HEADLESS=""
X.endif
X
X.if ${PORT_OPTIONS:MQRCODES}
XLIB_DEPENDS+=	libqrencode.so:${PORTSDIR}/graphics/libqrencode
XQMAKE_USE_QRCODE=1
X.else
XQMAKE_USE_QRCODE=0
X.endif
X
XPLIST_SUB+=	EXECUTABLE="bin/${BINARY}"
X
X.if ${PORT_OPTIONS:MUPNP}
XLIB_DEPENDS+=	libminiupnpc.so:${PORTSDIR}/net/miniupnpc
XQMAKE_USE_UPNP=	1
X.else
XQMAKE_USE_UPNP=	-
X.endif
X
X.include <bsd.port.pre.mk>
X
Xpost-patch:
X	@${REINPLACE_CMD} -e 's|%%PREFIX%%|${PREFIX}|' ${WRKSRC}/src/makefile.unix
X.if !${PORT_OPTIONS:MX11}
X	@cd ${WRKSRC}/src && ${CP} -p makefile.unix Makefile
X	@${REINPLACE_CMD} \
X		-e 's|^USE_UPNP.*$$|USE_UPNP=${QMAKE_USE_UPNP}|' \
X		-e 's|-l pthread|${PTHREAD_LIBS}|g' \
X		-e 's:-l dl::' \
X		${WRKSRC}/src/Makefile
X.endif
X
Xdo-configure:
X.if ${PORT_OPTIONS:MX11}
X	cd ${WRKSRC} && ${SETENV} ${QMAKE_ENV} \
X		${QMAKE} ${QMAKE_ARGS} USE_UPNP=${QMAKE_USE_UPNP} USE_QRCODE=${QMAKE_USE_QRCODE} \
X		QMAKE_LRELEASE=lrelease-qt4 PREFIX=${PREFIX} INCLUDEPATH=${BDB_INCLUDE_DIR} \
X		QMAKE_LIBDIR+=${BDB_LIB_DIR} ${PORTNAME}-qt.pro
X.endif
X
Xdo-install:
X.if ${PORT_OPTIONS:MX11}
X	${INSTALL_PROGRAM} -s ${WRKSRC}/${BINARY} ${STAGEDIR}${PREFIX}/bin/${BINARY}
X	${REINPLACE_CMD} -e 's,=/usr,=${PREFIX},' \
X		-e 's,bitcoin,${PORTNAME},g' \
X		-e 's,Bitcoin,${PORTNAME},g' \
X		-e 's,128,,g' ${WRKSRC}/contrib/debian/bitcoin-qt.desktop
X	${INSTALL} ${WRKSRC}/contrib/debian/bitcoin-qt.desktop ${STAGEDIR}${PREFIX}/share/applications/${PORTNAME}-qt.desktop
X	${INSTALL} ${WRKSRC}/src/qt/res/icons/bitcoin.png ${STAGEDIR}${PREFIX}/share/pixmaps/${PORTNAME}.png
X
X.else
X	${INSTALL_PROGRAM} -s ${WRKSRC}/src/${BINARY} ${STAGEDIR}${PREFIX}/bin/${BINARY}
X	${INSTALL} ${FILESDIR}/${PORTNAME}.conf.sample ${STAGEDIR}${PREFIX}/etc/${PORTNAME}.conf.sample
X	@if [ ! -f ${PREFIX}/etc/${PORTNAME}.conf ]; then \
X		${CP} -p ${FILESDIR}/${PORTNAME}.conf.sample ${STAGEDIR}${PREFIX}/etc/${PORTNAME}.conf; \
X	fi
X.endif
X
X.include <bsd.port.post.mk>
fa1f517f9294134a300c07d7187a5869
echo x - heavycoin/pkg-descr
sed 's/^X//' >heavycoin/pkg-descr << '42b8db8950a86f226001b1dc4331791d'
XHeavycoin is a free open source peer-to-peer electronic cash system that
Xis completely decentralized, without the need for a central server or
Xtrusted parties. Users hold the crypto keys to their own money and
Xtransact directly with each other, with the help of a P2P network to
Xcheck for double-spending.
X
XWWW: http://heavycoin.github.io
42b8db8950a86f226001b1dc4331791d
echo x - heavycoin/pkg-plist
sed 's/^X//' >heavycoin/pkg-plist << '254c103bef8c5e8e512d517548714032'
X%%EXECUTABLE%%
X%%X11%%share/applications/heavycoin-qt.desktop
X%%X11%%share/pixmaps/heavycoin.png
X%%HEADLESS%%@unexec if cmp -s %D/etc/heavycoin.conf.sample %D/etc/heavycoin.conf; then rm -f %D/etc/heavycoin.conf; fi
X%%HEADLESS%%etc/heavycoin.conf.sample
X%%HEADLESS%%@exec if [ ! -f %D/etc/heavycoin.conf ] ; then cp -p %D/%F %B/heavycoin.conf; fi
254c103bef8c5e8e512d517548714032
echo x - heavycoin/distinfo
sed 's/^X//' >heavycoin/distinfo << 'f8b36d842560f328c1e1c081b8a3830e'
XSHA256 (heavycoin-1.2.tar.gz) = 4a42f1cc33748a93bb249571772d60af86afffdf4a2616a80c8059f7134486cb
XSIZE (heavycoin-1.2.tar.gz) = 3334945
f8b36d842560f328c1e1c081b8a3830e
exit

