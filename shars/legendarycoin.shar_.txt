# This is a shell archive.  Save it in a file, remove anything before
# this line, and then unpack it by entering "sh file".  Note, it may
# create directories; files and directories will be owned by you and
# have default permissions.
#
# This archive contains:
#
#	legendarycoin
#	legendarycoin/files
#	legendarycoin/files/patch-src-makefile_bsd
#	legendarycoin/files/patch-src-main_cpp
#	legendarycoin/files/pkg-message.in
#	legendarycoin/files/legendarycoin.in
#	legendarycoin/files/legendarycoin.conf.sample
#	legendarycoin/files/patch-legendarycoin-qt_pro
#	legendarycoin/Makefile
#	legendarycoin/distinfo
#	legendarycoin/pkg-descr
#	legendarycoin/pkg-plist
#
echo c - legendarycoin
mkdir -p legendarycoin > /dev/null 2>&1
echo c - legendarycoin/files
mkdir -p legendarycoin/files > /dev/null 2>&1
echo x - legendarycoin/files/patch-src-makefile_bsd
sed 's/^X//' >legendarycoin/files/patch-src-makefile_bsd << 'b79a0b8fbd9953601811534627c2a060'
X--- src/makefile.bsd.orig	2014-04-19 09:47:35.000000000 -0400
X+++ src/makefile.bsd	2014-04-23 18:10:19.000000000 -0400
X@@ -10,6 +10,11 @@
X 
X DEFS=-DBOOST_SPIRIT_THREADSAFE
X 
X+BOOST_INCLUDE_PATH=/usr/local/include
X+BDB_INCLUDE_PATH=/usr/local/include/db48
X+BOOST_LIB_PATH=/usr/local/lib
X+BDB_LIB_PATH=/usr/local/lib/db48
X+
X DEFS += $(addprefix -I,$(CURDIR) $(CURDIR)/obj $(BOOST_INCLUDE_PATH) $(BDB_INCLUDE_PATH) $(OPENSSL_INCLUDE_PATH))
X LIBS = $(addprefix -L,$(BOOST_LIB_PATH) $(BDB_LIB_PATH) $(OPENSSL_LIB_PATH))
X 
X@@ -33,6 +38,7 @@
X    -l boost_filesystem$(BOOST_LIB_SUFFIX) \
X    -l boost_program_options$(BOOST_LIB_SUFFIX) \
X    -l boost_thread$(BOOST_LIB_SUFFIX) \
X+   -l boost_chrono$(BOOST_LIB_SUFFIX) \
X    -l db_cxx$(BDB_LIB_SUFFIX) \
X    -l ssl \
X    -l crypto \
X@@ -53,7 +59,6 @@
X LIBS+= \
X  -Wl,-B$(LMODE2) \
X    -l z \
X-   -l dl \
X    -l pthread
X 
X 
X@@ -95,7 +100,7 @@
X 
X # CXXFLAGS can be specified on the make command line, so we use xCXXFLAGS that only
X # adds some defaults in front. Unfortunately, CXXFLAGS=... $(CXXFLAGS) does not work.
X-xCXXFLAGS=-O0 -msse2 -pthread -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter \
X+xCXXFLAGS=-O2 -msse2 -pthread -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter \
X     $(DEBUGFLAGS) $(DEFS) $(HARDENING) $(CXXFLAGS)
X 
X # LDFLAGS can be specified on the make command line, so we use xLDFLAGS that only
X@@ -148,7 +153,7 @@
X DEFS += $(addprefix -I,$(CURDIR)/leveldb/helpers)
X OBJS += obj/txdb-leveldb.o
X leveldb/libleveldb.a:
X-  @echo "Building LevelDB ..."; cd leveldb; make libleveldb.a libmemenv.a; cd ..;
X+	@echo "Building LevelDB ..." && cd leveldb && $(MAKE) CC=$(CC) CXX=$(CXX) OPT="$(xCXXFLAGS)" libleveldb.a libmemenv.a && cd ..
X obj/txdb-leveldb.o: leveldb/libleveldb.a
X endif
X ifneq (${USE_LEVELDB}, 1)
b79a0b8fbd9953601811534627c2a060
echo x - legendarycoin/files/patch-src-main_cpp
sed 's/^X//' >legendarycoin/files/patch-src-main_cpp << '0cd81eee1c90b94ccc71b15248031672'
X--- src/main.cpp.org	2014-04-19 09:47:35.000000000 -0400
X+++ src/main.cpp	2014-04-23 17:57:21.000000000 -0400
X@@ -934,8 +934,8 @@
X 
X int generateMTRandom(unsigned int s, int range)
X {
X-	random::mt19937 gen(s);
X-    random::uniform_int_distribution<> dist(1, range);
X+	boost::random::mt19937 gen(s);
X+    boost::random::uniform_int_distribution<> dist(1, range);
X     return dist(gen);
X }
X 
0cd81eee1c90b94ccc71b15248031672
echo x - legendarycoin/files/pkg-message.in
sed 's/^X//' >legendarycoin/files/pkg-message.in << 'b998f1e83ec6aa67ec225516a86ed83f'
X*******************************************************************
XTo configure the LegendaryCoin server please edit: 
X%%PREFIX%%/etc/%%PORTNAME%%.conf
X
XYou must at least set a "rpcpassword" in the configuration file above.
X
XTo run the %%PORTNAME%%d server at startup, add the following
Xsettings to your /etc/rc.conf
X
X%%PORTNAME%%_enable="YES"
X
X*******************************************************************
b998f1e83ec6aa67ec225516a86ed83f
echo x - legendarycoin/files/legendarycoin.in
sed 's/^X//' >legendarycoin/files/legendarycoin.in << '4a413a2933806bace2ef1a2f61846490'
X#!/bin/sh
X#
X# $FreeBSD: $
X#
X
X# PROVIDE: %%PORTNAME%%
X# REQUIRE: LOGIN
X# KEYWORD: shutdown
X
X#
X# Add the following lines to /etc/rc.conf.local or /etc/rc.conf
X# to enable this service:
X#
X# %%PORTNAME%%_enable (bool):	Set to NO by default.
X#				Set it to YES to enable %%PORTNAME%%.
X# %%PORTNAME%%_config (path):	Set to %%PREFIX%%/etc/%%PORTNAME%%.conf
X#				by default.
X# %%PORTNAME%%_user:	The user account %%PORTNAME%% daemon runs as
X#				It uses 'root' user by default.
X# %%PORTNAME%%_group:	The group account %%PORTNAME%% daemon runs as
X#				It uses 'wheel' group by default.
X# %%PORTNAME%%_datadir (str):	Default to "/var/db/%%PORTNAME%%"
X#				Base data directory.
X
X. /etc/rc.subr
X
Xname=%%PORTNAME%%
Xrcvar=%%PORTNAME%%_enable
X
X: ${%%PORTNAME%%_enable:=NO}
X: ${%%PORTNAME%%_config=%%PREFIX%%/etc/%%PORTNAME%%.conf}
X: ${%%PORTNAME%%_datadir=/var/db/%%PORTNAME%%}
X: ${%%PORTNAME%%_user="root"}
X: ${%%PORTNAME%%_group="wheel"}
X
Xrequired_files=${%%PORTNAME%%_config}
Xcommand=%%PREFIX%%/bin/%%PORTNAME%%d
X%%PORTNAME%%_chdir=${%%PORTNAME%%_datadir}
Xpidfile="${%%PORTNAME%%_datadir}/%%PORTNAME%%d.pid"
Xstop_cmd=%%PORTNAME%%_stop
Xcommand_args="-conf=${%%PORTNAME%%_config} -datadir=${%%PORTNAME%%_datadir} -noupnp -daemon -pid=${pidfile}"
Xstart_precmd="${name}_prestart"
X
X%%PORTNAME%%_create_datadir()
X{
X	echo "Creating data directory"
X	eval mkdir -p ${%%PORTNAME%%_datadir}
X	[ $? -eq 0 ] && chown -R ${%%PORTNAME%%_user}:${%%PORTNAME%%_group} ${%%PORTNAME%%_datadir}
X	#ln -s ${%%PORTNAME%%_datadir} /.%%PORTNAME%%
X}
X
X%%PORTNAME%%_prestart()
X{
X	if [ ! -d "${%%PORTNAME%%_datadir}/." ]; then
X		%%PORTNAME%%_create_datadir || return 1
X	fi
X}
X
X%%PORTNAME%%_requirepidfile()
X{
X	if [ ! "0`check_pidfile ${pidfile} ${command}`" -gt 1 ]; then
X		echo "${name} not running? (check $pidfile)."
X		exit 1
X	fi
X}
X
X%%PORTNAME%%_stop()
X{
X    %%PORTNAME%%_requirepidfile
X
X	echo "Stopping ${name}."
X	eval ${command} -conf=${%%PORTNAME%%_config} -datadir=${%%PORTNAME%%_datadir} stop
X	wait_for_pids ${rc_pid}
X}
X
Xload_rc_config $name
Xrun_rc_command "$1"
4a413a2933806bace2ef1a2f61846490
echo x - legendarycoin/files/legendarycoin.conf.sample
sed 's/^X//' >legendarycoin/files/legendarycoin.conf.sample << 'a3972f29a18acd1be0df7ccf593aa082'
Xrpcuser=myname
X#rpcpassword=YOU MUST SET A PASSWORD
Xmaxconnections=20
Xrpcallowip=127.0.0.1
Xrpcport=7777
Xport=8877
Xserver=1
Xdaemon=1
Xlisten=1
Xgen=0
Xlogtimestamps=1
Xaddnode=63.247.147.163
Xaddnode=192.227.242.237
Xaddnode=5.175.194.173
a3972f29a18acd1be0df7ccf593aa082
echo x - legendarycoin/files/patch-legendarycoin-qt_pro
sed 's/^X//' >legendarycoin/files/patch-legendarycoin-qt_pro << 'f85373a1d26118c1b35f8f9c48c18141'
X--- legendarycoin-qt.pro.orig	2014-04-19 09:47:35.000000000 -0400
X+++ legendarycoin-qt.pro	2014-04-23 17:57:03.000000000 -0400
X@@ -396,7 +396,7 @@
X LIBS += -lssl -lcrypto -ldb_cxx$$BDB_LIB_SUFFIX
X # -lgdi32 has to happen after -lcrypto (see  #681)
X windows:LIBS += -lws2_32 -lshlwapi -lmswsock -lole32 -loleaut32 -luuid -lgdi32
X-LIBS += -lboost_system$$BOOST_LIB_SUFFIX -lboost_filesystem$$BOOST_LIB_SUFFIX -lboost_program_options$$BOOST_LIB_SUFFIX -lboost_thread$$BOOST_THREAD_LIB_SUFFIX
X+LIBS += -lboost_system$$BOOST_LIB_SUFFIX -lboost_filesystem$$BOOST_LIB_SUFFIX -lboost_program_options$$BOOST_LIB_SUFFIX -lboost_thread$$BOOST_THREAD_LIB_SUFFIX -lboost_chrono$$BOOST_THREAD_LIB_SUFFIX
X windows:LIBS += -lboost_chrono$$BOOST_LIB_SUFFIX
X 
X contains(RELEASE, 1) {
f85373a1d26118c1b35f8f9c48c18141
echo x - legendarycoin/Makefile
sed 's/^X//' >legendarycoin/Makefile << '6a4411fd0f17c55329e33f46570d7bc4'
X# Created by: Daniel Morante <daniel@morante.net>
X# $FreeBSD$
X
XPORTNAME=	legendarycoin
XPORTVERSION=	1.0.4.1
XCATEGORIES=	net-p2p finance
XMASTER_SITES=	GH
X
XMAINTAINER=	daniel@morante.net
XCOMMENT=	Peer-to-Peer crypto currency using scrypt as a proof-of-work algorithm
X
XLICENSE=	MIT
X
XLIB_DEPENDS=	libboost_date_time.so:${PORTSDIR}/devel/boost-libs \
X			execinfo:${PORTSDIR}/devel/libexecinfo
X
XOPTIONS_DEFINE=	X11 UPNP QRCODES
XOPTIONS_DEFAULT=	X11 QRCODES
XUPNP_DESC=	Build with UPNP support
XQRCODES_DESC=	Build with QR code display
X
XUSE_GITHUB=	yes
XGH_ACCOUNT=	${PORTNAME}
XGH_PROJECT=	${PORTNAME}
XGH_COMMIT=	cb05cfc
XGH_TAGNAME=	cb05cfc
X
XUSES=		gmake
XUSE_OPENSSL=	yes
XUSE_BDB=	yes
XWANT_BDB_VER=	48
X
XCXXFLAGS+=	-I${LOCALBASE}/include -I${BDB_INCLUDE_DIR}
XCXXFLAGS+=	-L${LOCALBASE}/lib -L${BDB_LIB_DIR}
XCXXFLAGS+=	-Wno-invalid-offsetof
X
X.include <bsd.port.options.mk>
X
X.if ${PORT_OPTIONS:MX11}
XPLIST_SUB+=	X11=""
X.else
XSUB_LIST+=	PORTNAME=${PORTNAME}
XUSE_RC_SUBR=	${PORTNAME}
XSUB_FILES=	pkg-message
XPLIST_SUB+=	X11="@comment "
X.endif
X
X.if ${PORT_OPTIONS:MX11}
XUSE_QT4=	corelib gui qmake_build linguist uic moc rcc
XBINARY=		${PORTNAME}-qt
XPLIST_SUB+=	HEADLESS="@comment "
X.else
XBINARY=		${PORTNAME}d
XMAKE_ARGS+=	-C ${WRKSRC}/src
XPLIST_SUB+=	HEADLESS=""
X.endif
X
X.if ${PORT_OPTIONS:MQRCODES}
XLIB_DEPENDS+=	libqrencode.so:${PORTSDIR}/graphics/libqrencode
XQMAKE_USE_QRCODE=1
X.else
XQMAKE_USE_QRCODE=0
X.endif
X
XPLIST_SUB+=	EXECUTABLE="bin/${BINARY}" \
X			PORTNAME=${PORTNAME}
X
X.if ${PORT_OPTIONS:MUPNP}
XLIB_DEPENDS+=	libminiupnpc.so:${PORTSDIR}/net/miniupnpc
XQMAKE_USE_UPNP=	1
X.else
XQMAKE_USE_UPNP=	-
X.endif
X
X.include <bsd.port.pre.mk>
X
Xpost-patch:
X	@${REINPLACE_CMD} -e 's|%%PREFIX%%|${PREFIX}|' ${WRKSRC}/src/makefile.bsd
X.if !${PORT_OPTIONS:MX11}
X	@cd ${WRKSRC}/src && ${CP} -p makefile.bsd Makefile
X	@${REINPLACE_CMD} \
X		-e 's|^USE_UPNP.*$$|USE_UPNP=${QMAKE_USE_UPNP}|' \
X		-e 's|-l pthread|${PTHREAD_LIBS}|g' \
X		-e 's:-l dl::' \
X		${WRKSRC}/src/Makefile
X.endif
X
Xdo-configure:
X.if ${PORT_OPTIONS:MX11}
X	cd ${WRKSRC} && ${SETENV} ${QMAKE_ENV} \
X		${QMAKE} ${QMAKE_ARGS} USE_UPNP=${QMAKE_USE_UPNP} USE_QRCODE=${QMAKE_USE_QRCODE} \
X		QMAKE_LRELEASE=lrelease-qt4 PREFIX=${PREFIX} INCLUDEPATH=${BDB_INCLUDE_DIR} \
X		QMAKE_LIBDIR+=${BDB_LIB_DIR} ${PORTNAME}-qt.pro
X.endif
X
Xdo-install:
X.if ${PORT_OPTIONS:MX11}
X	${INSTALL_PROGRAM} -s ${WRKSRC}/${GH_PROJECT}d-qt ${STAGEDIR}${PREFIX}/bin/${BINARY}
X	${REINPLACE_CMD} -e 's,=/usr,=${PREFIX},' \
X		-e 's,bitcoin,${PORTNAME},g' \
X		-e 's,Bitcoin,Legendarycoin,g' \
X		-e 's,128,,g' ${WRKSRC}/contrib/debian/bitcoin-qt.desktop
X	${INSTALL} ${WRKSRC}/contrib/debian/bitcoin-qt.desktop ${STAGEDIR}${PREFIX}/share/applications/${PORTNAME}-qt.desktop
X	${INSTALL} ${WRKSRC}/src/qt/res/icons/bitcoin.png ${STAGEDIR}${PREFIX}/share/pixmaps/${PORTNAME}.png
X
X.else
X	${INSTALL_PROGRAM} -s ${WRKSRC}/src/${GH_PROJECT}d ${STAGEDIR}${PREFIX}/bin/${BINARY}
X	${INSTALL} ${FILESDIR}/${PORTNAME}.conf.sample ${STAGEDIR}${PREFIX}/etc/${PORTNAME}.conf.sample
X	@if [ ! -f ${PREFIX}/etc/${PORTNAME}.conf ]; then \
X		${CP} -p ${FILESDIR}/${PORTNAME}.conf.sample ${STAGEDIR}${PREFIX}/etc/${PORTNAME}.conf; \
X	fi
X.endif
X
X.include <bsd.port.post.mk>
6a4411fd0f17c55329e33f46570d7bc4
echo x - legendarycoin/distinfo
sed 's/^X//' >legendarycoin/distinfo << 'dca8188eaa2f12f885d015c1ad240b77'
XSHA256 (legendarycoin-1.0.4.1.tar.gz) = 9f8e08532a3d6f489e4f0fa15f7bb850c545e299d06c5e7433936f684c076706
XSIZE (legendarycoin-1.0.4.1.tar.gz) = 3961662
dca8188eaa2f12f885d015c1ad240b77
echo x - legendarycoin/pkg-descr
sed 's/^X//' >legendarycoin/pkg-descr << '0082f2f9cd52a61d5990aabc92a62f4d'
XLegendary Coin is a free open source peer-to-peer electronic cash system that
Xis completely decentralized, without the need for a central server or
Xtrusted parties. Users hold the crypto keys to their own money and
Xtransact directly with each other, with the help of a P2P network to
Xcheck for double-spending.
X
XWWW: http://legendarycoin.com/
0082f2f9cd52a61d5990aabc92a62f4d
echo x - legendarycoin/pkg-plist
sed 's/^X//' >legendarycoin/pkg-plist << '6046cdce11253ea333fea048a4d1bee2'
X%%EXECUTABLE%%
X%%X11%%share/applications/%%PORTNAME%%-qt.desktop
X%%X11%%share/pixmaps/%%PORTNAME%%.png
X%%HEADLESS%%@unexec if cmp -s %D/etc/%%PORTNAME%%.conf.sample %D/etc/%%PORTNAME%%.conf; then rm -f %D/etc/%%PORTNAME%%.conf; fi
X%%HEADLESS%%etc/%%PORTNAME%%.conf.sample
X%%HEADLESS%%@exec if [ ! -f %D/etc/%%PORTNAME%%.conf ] ; then cp -p %D/%F %B/%%PORTNAME%%.conf; fi
6046cdce11253ea333fea048a4d1bee2
exit

