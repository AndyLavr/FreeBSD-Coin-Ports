# This is a shell archive.  Save it in a file, remove anything before
# this line, and then unpack it by entering "sh file".  Note, it may
# create directories; files and directories will be owned by you and
# have default permissions.
#
# This archive contains:
#
#	stashcoin
#	stashcoin/files
#	stashcoin/files/patch-src-makefile_unix
#	stashcoin/files/patch-src__serialize.h
#	stashcoin/files/patch-src-init_cpp
#	stashcoin/files/pkg-message.in
#	stashcoin/files/patch-stashcoin-qt_pro
#	stashcoin/files/stashcoin.in
#	stashcoin/files/stashcoin.conf.sample
#	stashcoin/files/stashcoin-qt.desktop
#	stashcoin/Makefile
#	stashcoin/distinfo
#	stashcoin/pkg-descr
#	stashcoin/pkg-plist
#
echo c - stashcoin
mkdir -p stashcoin > /dev/null 2>&1
echo c - stashcoin/files
mkdir -p stashcoin/files > /dev/null 2>&1
echo x - stashcoin/files/patch-src-makefile_unix
sed 's/^X//' >stashcoin/files/patch-src-makefile_unix << '61ed92df9e08682c27b31e269be295b9'
X--- src/makefile.unix.orig	2013-10-13 06:05:19.000000000 -0400
X+++ src/makefile.unix	2013-12-27 05:11:28.000000000 -0500
X@@ -15,6 +15,11 @@
X 
X DEFS=-DBOOST_SPIRIT_THREADSAFE -D_FILE_OFFSET_BITS=64
X 
X+BOOST_INCLUDE_PATH=%%PREFIX%%/include
X+BDB_INCLUDE_PATH=%%PREFIX%%/include/db48
X+BOOST_LIB_PATH=%%PREFIX%%/lib
X+BDB_LIB_PATH=%%PREFIX%%/lib/db48
X+
X DEFS += $(addprefix -I,$(CURDIR) $(CURDIR)/obj $(BOOST_INCLUDE_PATH) $(BDB_INCLUDE_PATH) $(OPENSSL_INCLUDE_PATH))
X LIBS = $(addprefix -L,$(BOOST_LIB_PATH) $(BDB_LIB_PATH) $(OPENSSL_LIB_PATH))
X 
X@@ -38,6 +43,7 @@
X    -l boost_filesystem$(BOOST_LIB_SUFFIX) \
X    -l boost_program_options$(BOOST_LIB_SUFFIX) \
X    -l boost_thread$(BOOST_LIB_SUFFIX) \
X+   -l boost_chrono$(BOOST_LIB_SUFFIX) \
X    -l db_cxx$(BDB_LIB_SUFFIX) \
X    -l ssl \
X    -l crypto
X@@ -61,7 +67,6 @@
X LIBS+= \
X  -Wl,-B$(LMODE2) \
X    -l z \
X-   -l dl \
X    -l pthread
X 
X 
61ed92df9e08682c27b31e269be295b9
echo x - stashcoin/files/patch-src__serialize.h
sed 's/^X//' >stashcoin/files/patch-src__serialize.h << 'd1575484446be93448d763f5962987b4'
X--- ./src/serialize.h.orig	2013-09-24 01:50:35.661706153 +0000
X+++ ./src/serialize.h	2013-09-24 01:50:52.913703572 +0000
X@@ -895,19 +895,6 @@
X     iterator insert(iterator it, const char& x=char()) { return vch.insert(it, x); }
X     void insert(iterator it, size_type n, const char& x) { vch.insert(it, n, x); }
X 
X-    void insert(iterator it, const_iterator first, const_iterator last)
X-    {
X-        assert(last - first >= 0);
X-        if (it == vch.begin() + nReadPos && (unsigned int)(last - first) <= nReadPos)
X-        {
X-            // special case for inserting at the front when there's room
X-            nReadPos -= (last - first);
X-            memcpy(&vch[nReadPos], &first[0], last - first);
X-        }
X-        else
X-            vch.insert(it, first, last);
X-    }
X-
X     void insert(iterator it, std::vector<char>::const_iterator first, std::vector<char>::const_iterator last)
X     {
X         assert(last - first >= 0);
d1575484446be93448d763f5962987b4
echo x - stashcoin/files/patch-src-init_cpp
sed 's/^X//' >stashcoin/files/patch-src-init_cpp << 'a896fb23e93b57aff088f75a3535ffc9'
X--- src/init.cpp.orig	2014-03-09 14:42:31.000000000 -0400
X+++ src/init.cpp	2014-04-14 07:37:22.000000000 -0400
X@@ -531,7 +531,7 @@
X     // Make sure enough file descriptors are available
X     int nBind = std::max((int)mapArgs.count("-bind"), 1);
X     nMaxConnections = GetArg("-maxconnections", 125);
X-    nMaxConnections = std::max(std::min(nMaxConnections, FD_SETSIZE - nBind - MIN_CORE_FILEDESCRIPTORS), 0);
X+	nMaxConnections = std::max(std::min(nMaxConnections, (int)(FD_SETSIZE - nBind - MIN_CORE_FILEDESCRIPTORS)), 0);
X     int nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS);
X     if (nFD < MIN_CORE_FILEDESCRIPTORS)
X         return InitError(_("Not enough file descriptors available."));
a896fb23e93b57aff088f75a3535ffc9
echo x - stashcoin/files/pkg-message.in
sed 's/^X//' >stashcoin/files/pkg-message.in << 'f5183f12eef29d1ef5af7192d7a291c9'
X*******************************************************************
XTo configure the Stashcoin server please edit: 
X%%PREFIX%%/etc/%%PORTNAME%%.conf
X
XYou must at least set a "rpcpassword" in the configuration file above.
X
XTo run the %%PORTNAME%%d server at startup, add the following
Xsettings to your /etc/rc.conf
X
X%%PORTNAME%%_enable="YES"
X
X*******************************************************************
f5183f12eef29d1ef5af7192d7a291c9
echo x - stashcoin/files/patch-stashcoin-qt_pro
sed 's/^X//' >stashcoin/files/patch-stashcoin-qt_pro << '03c3533c2a3f3f11b181e7583f31c06d'
X--- stashcoin-qt.pro.orig	2014-03-09 14:42:31.000000000 -0400
X+++ stashcoin-qt.pro	2014-04-14 07:15:17.000000000 -0400
X@@ -408,7 +408,7 @@
X LIBS += -lssl -lcrypto -ldb_cxx$$BDB_LIB_SUFFIX
X # -lgdi32 has to happen after -lcrypto (see  #681)
X win32:LIBS += -lws2_32 -lshlwapi -lmswsock -lole32 -loleaut32 -luuid -lgdi32
X-LIBS += -lboost_system$$BOOST_LIB_SUFFIX -lboost_filesystem$$BOOST_LIB_SUFFIX -lboost_program_options$$BOOST_LIB_SUFFIX -lboost_thread$$BOOST_THREAD_LIB_SUFFIX
X+LIBS += -lboost_system$$BOOST_LIB_SUFFIX -lboost_filesystem$$BOOST_LIB_SUFFIX -lboost_program_options$$BOOST_LIB_SUFFIX -lboost_thread$$BOOST_THREAD_LIB_SUFFIX -lboost_chrono$$BOOST_LIB_SUFFIX
X win32:LIBS += -lboost_chrono$$BOOST_LIB_SUFFIX
X macx:LIBS += -lboost_chrono$$BOOST_LIB_SUFFIX
X 
03c3533c2a3f3f11b181e7583f31c06d
echo x - stashcoin/files/stashcoin.in
sed 's/^X//' >stashcoin/files/stashcoin.in << '6fd769dc4cf1fbe5cd65cc10ca8aa162'
X#!/bin/sh
X#
X# $FreeBSD: head/net-p2p/zetacoin/files/zetacoin.in 340872 2014-01-24 00:14:07Z mat $
X#
X
X# PROVIDE: %%PORTNAME%%
X# REQUIRE: LOGIN
X# KEYWORD: shutdown
X
X#
X# Add the following lines to /etc/rc.conf.local or /etc/rc.conf
X# to enable this service:
X#
X# %%PORTNAME%%_enable (bool):	Set to NO by default.
X#				Set it to YES to enable %%PORTNAME%%.
X# %%PORTNAME%%_config (path):	Set to %%PREFIX%%/etc/%%PORTNAME%%.conf
X#				by default.
X# %%PORTNAME%%_user:	The user account %%PORTNAME%% daemon runs as
X#				It uses 'root' user by default.
X# %%PORTNAME%%_group:	The group account %%PORTNAME%% daemon runs as
X#				It uses 'wheel' group by default.
X# %%PORTNAME%%_datadir (str):	Default to "/var/db/%%PORTNAME%%"
X#				Base data directory.
X
X. /etc/rc.subr
X
Xname=%%PORTNAME%%
Xrcvar=%%PORTNAME%%_enable
X
X: ${%%PORTNAME%%_enable:=NO}
X: ${%%PORTNAME%%_config=%%PREFIX%%/etc/%%PORTNAME%%.conf}
X: ${%%PORTNAME%%_datadir=/var/db/%%PORTNAME%%}
X: ${%%PORTNAME%%_user="root"}
X: ${%%PORTNAME%%_group="wheel"}
X
Xrequired_files=${%%PORTNAME%%_config}
Xcommand=%%PREFIX%%/bin/%%PORTNAME%%d
X%%PORTNAME%%_chdir=${%%PORTNAME%%_datadir}
Xpidfile="${%%PORTNAME%%_datadir}/%%PORTNAME%%d.pid"
Xstop_cmd=%%PORTNAME%%_stop
Xcommand_args="-conf=${%%PORTNAME%%_config} -datadir=${%%PORTNAME%%_datadir} -noupnp -daemon -pid=${pidfile}"
Xstart_precmd="${name}_prestart"
X
X%%PORTNAME%%_create_datadir()
X{
X	echo "Creating data directory"
X	eval mkdir -p ${%%PORTNAME%%_datadir}
X	[ $? -eq 0 ] && chown -R ${%%PORTNAME%%_user}:${%%PORTNAME%%_group} ${%%PORTNAME%%_datadir}
X	ln -s ${%%PORTNAME%%_datadir} /.%%PORTNAME%%
X}
X
X%%PORTNAME%%_prestart()
X{
X	if [ ! -d "${%%PORTNAME%%_datadir}/." ]; then
X		%%PORTNAME%%_create_datadir || return 1
X	fi
X}
X
X%%PORTNAME%%_requirepidfile()
X{
X	if [ ! "0`check_pidfile ${pidfile} ${command}`" -gt 1 ]; then
X		echo "${name} not running? (check $pidfile)."
X		exit 1
X	fi
X}
X
X%%PORTNAME%%_stop()
X{
X    %%PORTNAME%%_requirepidfile
X
X	echo "Stopping ${name}."
X	eval ${command} -conf=${%%PORTNAME%%_config} -datadir=${%%PORTNAME%%_datadir} stop
X	wait_for_pids ${rc_pid}
X}
X
Xload_rc_config $name
Xrun_rc_command "$1"
6fd769dc4cf1fbe5cd65cc10ca8aa162
echo x - stashcoin/files/stashcoin.conf.sample
sed 's/^X//' >stashcoin/files/stashcoin.conf.sample << '17348c4fc417608416f39f968db301f8'
Xrpcuser=myname
X#rpcpassword=YOU MUST SET A PASSWORD
Xmaxconnection=80
Xrpcallowip=127.0.0.1
Xrpcport=22713
Xport=22790
Xserver=1
Xdaemon=1
Xlisten=1
Xlogtimestamps=1
Xaddnode=63.247.147.163
Xaddnode=23.249.161.180
Xaddnode=107.170.41.143
Xaddnode=107.170.237.45
Xaddnode=23.249.161.229
Xaddnode=23.249.161.232
Xaddnode=107.161.144.127
17348c4fc417608416f39f968db301f8
echo x - stashcoin/files/stashcoin-qt.desktop
sed 's/^X//' >stashcoin/files/stashcoin-qt.desktop << '57d5fc213f2152552808a2bb39f2195b'
X[Desktop Entry]
XEncoding=UTF-8
XName=Stashcoin
XComment=Stashcoin P2P Cryptocurrency
XComment[fr]=Stashcoin, monnaie virtuelle cryptographique pair à pair
XComment[tr]=Stashcoin, eşten eşe kriptografik sanal para birimi
XExec=stashcoin-qt %u
XTerminal=false
XType=Application
XIcon=stashcoin
XMimeType=x-scheme-handler/stashcoin;
XCategories=Office;Finance;
57d5fc213f2152552808a2bb39f2195b
echo x - stashcoin/Makefile
sed 's/^X//' >stashcoin/Makefile << '748da07b83bbc441b6a84d235681ace8'
X# Created by: Daniel Morante <daniel@morante.net>
X# $FreeBSD: head/net-p2p/zetacoin/Makefile 343214 2014-02-07 11:44:08Z bapt $
X
XPORTNAME=	stashcoin
XPORTVERSION=	0.9.0.0
XCATEGORIES=	net-p2p finance
XMASTER_SITES=	GH
X
XMAINTAINER=	daniel@morante.net
XCOMMENT=	Peer-to-Peer crypto currency based on Bitcoin
X
XLICENSE=	MIT
X
XLIB_DEPENDS=	libboost_date_time.so:${PORTSDIR}/devel/boost-libs
X
XOPTIONS_DEFINE=	X11 UPNP QRCODES
XOPTIONS_DEFAULT=	X11 QRCODES
XUPNP_DESC=	Build with UPNP support
XQRCODES_DESC=	Build with QR code display
X
XUSE_GITHUB=	yes
XGH_ACCOUNT=	stashdev
XGH_PROJECT=	${PORTNAME}
XGH_COMMIT=	2eef0db
XGH_TAGNAME=	2eef0db
X
XUSES=		gmake
XUSE_OPENSSL=	yes
XUSE_BDB=	yes
XWANT_BDB_VER=	48
X
XCXXFLAGS+=	-I${LOCALBASE}/include -I${BDB_INCLUDE_DIR}
XCXXFLAGS+=	-L${LOCALBASE}/lib -L${BDB_LIB_DIR}
XCXXFLAGS+=	-Wno-invalid-offsetof
X
X.include <bsd.port.options.mk>
X
X.if ${PORT_OPTIONS:MX11}
XPLIST_SUB+=	X11=""
X.else
XSUB_LIST+=	PORTNAME=${PORTNAME}
XUSE_RC_SUBR=	${PORTNAME}
XSUB_FILES=	pkg-message
XPLIST_SUB+=	X11="@comment "
X.endif
X
X.if ${PORT_OPTIONS:MX11}
XUSE_QT4=	corelib gui qmake_build linguist uic moc rcc
XBINARY=		${PORTNAME}-qt
XPLIST_SUB+=	HEADLESS="@comment "
X.else
XBINARY=		${PORTNAME}d
XMAKE_ARGS+=	-C ${WRKSRC}/src
XPLIST_SUB+=	HEADLESS=""
X.endif
X
X.if ${PORT_OPTIONS:MQRCODES}
XLIB_DEPENDS+=	libqrencode.so:${PORTSDIR}/graphics/libqrencode
XQMAKE_USE_QRCODE=1
X.else
XQMAKE_USE_QRCODE=0
X.endif
X
XPLIST_SUB+=	EXECUTABLE="bin/${BINARY}" \
X			PORTNAME=${PORTNAME}
X
X.if ${PORT_OPTIONS:MUPNP}
XLIB_DEPENDS+=	libminiupnpc.so:${PORTSDIR}/net/miniupnpc
XQMAKE_USE_UPNP=	1
X.else
XQMAKE_USE_UPNP=	-
X.endif
X
X.include <bsd.port.pre.mk>
X
Xpost-extract:
X	@${RM} -f ${WRKSRC}/bitcoin-qt
X	@${RM} -Rf ${WRKSRC}/build
X
Xpost-patch:
X	@${REINPLACE_CMD} -e 's|%%PREFIX%%|${PREFIX}|' ${WRKSRC}/src/makefile.unix
X.if !${PORT_OPTIONS:MX11}
X	@cd ${WRKSRC}/src && ${CP} -p makefile.unix Makefile
X	@${REINPLACE_CMD} \
X		-e 's|^USE_UPNP.*$$|USE_UPNP=${QMAKE_USE_UPNP}|' \
X		-e 's|-l pthread|${PTHREAD_LIBS}|g' \
X		-e 's:-l dl::' \
X		${WRKSRC}/src/Makefile
X.endif
X
Xdo-configure:
X.if ${PORT_OPTIONS:MX11}
X	cd ${WRKSRC} && ${SETENV} ${QMAKE_ENV} \
X		${QMAKE} ${QMAKE_ARGS} USE_UPNP=${QMAKE_USE_UPNP} USE_QRCODE=${QMAKE_USE_QRCODE} \
X		QMAKE_LRELEASE=lrelease-qt4 PREFIX=${PREFIX} INCLUDEPATH=${BDB_INCLUDE_DIR} \
X		QMAKE_LIBDIR+=${BDB_LIB_DIR} ${PORTNAME}-qt.pro
X.endif
X
Xdo-install:
X.if ${PORT_OPTIONS:MX11}
X	${INSTALL_PROGRAM} -s ${WRKSRC}/bitcoin-qt ${STAGEDIR}${PREFIX}/bin/${BINARY}
X	${REINPLACE_CMD} -e 's,=/usr,=${PREFIX},' \
X		-e 's,128,,g' ${FILESDIR}/${PORTNAME}-qt.desktop
X	${INSTALL} ${FILESDIR}/${PORTNAME}-qt.desktop ${STAGEDIR}${PREFIX}/share/applications/${PORTNAME}-qt.desktop
X	${INSTALL} ${WRKSRC}/src/qt/res/icons/${PORTNAME}.png ${STAGEDIR}${PREFIX}/share/pixmaps/${PORTNAME}.png
X
X.else
X	${INSTALL_PROGRAM} -s ${WRKSRC}/src/${BINARY} ${STAGEDIR}${PREFIX}/bin/${BINARY}
X	${INSTALL} ${FILESDIR}/${PORTNAME}.conf.sample ${STAGEDIR}${PREFIX}/etc/${PORTNAME}.conf.sample
X	@if [ ! -f ${PREFIX}/etc/${PORTNAME}.conf ]; then \
X		${CP} -p ${FILESDIR}/${PORTNAME}.conf.sample ${STAGEDIR}${PREFIX}/etc/${PORTNAME}.conf; \
X	fi
X.endif
X
X.include <bsd.port.post.mk>
748da07b83bbc441b6a84d235681ace8
echo x - stashcoin/distinfo
sed 's/^X//' >stashcoin/distinfo << 'a18a57c995ac8ec5d8ea86e4f38bc526'
XSHA256 (stashcoin-0.9.0.0.tar.gz) = 732f9bc778dc3398ea263e41b5ef33adf224df8f4b6a4f69459bb86c76646221
XSIZE (stashcoin-0.9.0.0.tar.gz) = 27010712
a18a57c995ac8ec5d8ea86e4f38bc526
echo x - stashcoin/pkg-descr
sed 's/^X//' >stashcoin/pkg-descr << '1fee3b35f9c76ddd95dec2ddf39e9f1f'
XStashcoin is a free open source peer-to-peer electronic cash system that
Xis completely decentralized, without the need for a central server or
Xtrusted parties. Users hold the crypto keys to their own money and
Xtransact directly with each other, with the help of a P2P network to
Xcheck for double-spending.
X
XWWW: http://www.stashgroup.net/
1fee3b35f9c76ddd95dec2ddf39e9f1f
echo x - stashcoin/pkg-plist
sed 's/^X//' >stashcoin/pkg-plist << 'c86cacee6edcc6c4c0e9e67d97041481'
X%%EXECUTABLE%%
X%%X11%%share/applications/%%PORTNAME%%-qt.desktop
X%%X11%%share/pixmaps/%%PORTNAME%%.png
X%%HEADLESS%%@unexec if cmp -s %D/etc/%%PORTNAME%%.conf.sample %D/etc/%%PORTNAME%%.conf; then rm -f %D/etc/%%PORTNAME%%.conf; fi
X%%HEADLESS%%etc/%%PORTNAME%%.conf.sample
X%%HEADLESS%%@exec if [ ! -f %D/etc/%%PORTNAME%%.conf ] ; then cp -p %D/%F %B/%%PORTNAME%%.conf; fi
c86cacee6edcc6c4c0e9e67d97041481
exit

