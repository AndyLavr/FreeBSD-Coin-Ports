# This is a shell archive.  Save it in a file, remove anything before
# this line, and then unpack it by entering "sh file".  Note, it may
# create directories; files and directories will be owned by you and
# have default permissions.
#
# This archive contains:
#
#	giftcoin
#	giftcoin/files
#	giftcoin/files/giftcoin.in
#	giftcoin/files/patch-src-makefile_unix
#	giftcoin/files/extra-patch-endian
#	giftcoin/files/pkg-message.in
#	giftcoin/files/giftcoin.conf.sample
#	giftcoin/files/patch-bitcoin-qt_pro
#	giftcoin/files/patch-src-leveldb-Makefile
#	giftcoin/files/patch-src__scrypt.h
#	giftcoin/files/patch-src__scrypt.cpp
#	giftcoin/Makefile
#	giftcoin/pkg-descr
#	giftcoin/distinfo
#	giftcoin/pkg-plist
#
echo c - giftcoin
mkdir -p giftcoin > /dev/null 2>&1
echo c - giftcoin/files
mkdir -p giftcoin/files > /dev/null 2>&1
echo x - giftcoin/files/giftcoin.in
sed 's/^X//' >giftcoin/files/giftcoin.in << '8ec6732369da44acf6cde43e3eda7689'
X#!/bin/sh
X#
X# $FreeBSD: $
X#
X
X# PROVIDE: %%PORTNAME%%
X# REQUIRE: LOGIN
X# KEYWORD: shutdown
X
X#
X# Add the following lines to /etc/rc.conf.local or /etc/rc.conf
X# to enable this service:
X#
X# %%PORTNAME%%_enable (bool):	Set to NO by default.
X#				Set it to YES to enable %%PORTNAME%%.
X# %%PORTNAME%%_config (path):	Set to %%PREFIX%%/etc/%%PORTNAME%%.conf
X#				by default.
X# %%PORTNAME%%_user:	The user account %%PORTNAME%% daemon runs as
X#				It uses 'root' user by default.
X# %%PORTNAME%%_group:	The group account %%PORTNAME%% daemon runs as
X#				It uses 'wheel' group by default.
X# %%PORTNAME%%_datadir (str):	Default to "/var/db/%%PORTNAME%%"
X#				Base data directory.
X
X. /etc/rc.subr
X
Xname=%%PORTNAME%%
Xrcvar=%%PORTNAME%%_enable
X
X: ${%%PORTNAME%%_enable:=NO}
X: ${%%PORTNAME%%_config=%%PREFIX%%/etc/%%PORTNAME%%.conf}
X: ${%%PORTNAME%%_datadir=/var/db/%%PORTNAME%%}
X: ${%%PORTNAME%%_user="root"}
X: ${%%PORTNAME%%_group="wheel"}
X
Xrequired_files=${%%PORTNAME%%_config}
Xcommand=%%PREFIX%%/bin/%%PORTNAME%%d
X%%PORTNAME%%_chdir=${%%PORTNAME%%_datadir}
Xpidfile="${%%PORTNAME%%_datadir}/%%PORTNAME%%d.pid"
Xstop_cmd=%%PORTNAME%%_stop
Xcommand_args="-conf=${%%PORTNAME%%_config} -datadir=${%%PORTNAME%%_datadir} -noupnp -daemon -pid=${pidfile}"
Xstart_precmd="${name}_prestart"
X
X%%PORTNAME%%_create_datadir()
X{
X	echo "Creating data directory"
X	eval mkdir -p ${%%PORTNAME%%_datadir}
X	[ $? -eq 0 ] && chown -R ${%%PORTNAME%%_user}:${%%PORTNAME%%_group} ${%%PORTNAME%%_datadir}
X	#ln -s ${%%PORTNAME%%_datadir} /.%%PORTNAME%%
X}
X
X%%PORTNAME%%_prestart()
X{
X	if [ ! -d "${%%PORTNAME%%_datadir}/." ]; then
X		%%PORTNAME%%_create_datadir || return 1
X	fi
X}
X
X%%PORTNAME%%_requirepidfile()
X{
X	if [ ! "0`check_pidfile ${pidfile} ${command}`" -gt 1 ]; then
X		echo "${name} not running? (check $pidfile)."
X		exit 1
X	fi
X}
X
X%%PORTNAME%%_stop()
X{
X    %%PORTNAME%%_requirepidfile
X
X	echo "Stopping ${name}."
X	eval ${command} -conf=${%%PORTNAME%%_config} -datadir=${%%PORTNAME%%_datadir} stop
X	wait_for_pids ${rc_pid}
X}
X
Xload_rc_config $name
Xrun_rc_command "$1"
8ec6732369da44acf6cde43e3eda7689
echo x - giftcoin/files/patch-src-makefile_unix
sed 's/^X//' >giftcoin/files/patch-src-makefile_unix << 'ed4b0de2ce3fc81743bca4969c7072d0'
X--- src/makefile.unix.orig	2014-01-03 19:05:19.000000000 -0500
X+++ src/makefile.unix	2014-01-03 19:05:29.000000000 -0500
X@@ -15,6 +15,11 @@
X 
X DEFS=-DBOOST_SPIRIT_THREADSAFE -D_FILE_OFFSET_BITS=64
X 
X+BOOST_INCLUDE_PATH=%%PREFIX%%/include
X+BDB_INCLUDE_PATH=%%PREFIX%%/include/db48
X+BOOST_LIB_PATH=%%PREFIX%%/lib
X+BDB_LIB_PATH=%%PREFIX%%/lib/db48
X+
X DEFS += $(addprefix -I,$(CURDIR) $(CURDIR)/obj $(BOOST_INCLUDE_PATH) $(BDB_INCLUDE_PATH) $(OPENSSL_INCLUDE_PATH))
X LIBS = $(addprefix -L,$(BOOST_LIB_PATH) $(BDB_LIB_PATH) $(OPENSSL_LIB_PATH))
X 
X@@ -38,6 +43,7 @@
X    -l boost_filesystem$(BOOST_LIB_SUFFIX) \
X    -l boost_program_options$(BOOST_LIB_SUFFIX) \
X    -l boost_thread$(BOOST_LIB_SUFFIX) \
X+   -l boost_chrono$(BOOST_LIB_SUFFIX) \
X    -l db_cxx$(BDB_LIB_SUFFIX) \
X    -l ssl \
X    -l crypto
X@@ -61,7 +67,6 @@
X LIBS+= \
X  -Wl,-B$(LMODE2) \
X    -l z \
X-   -l dl \
X    -l pthread
X 
X 
ed4b0de2ce3fc81743bca4969c7072d0
echo x - giftcoin/files/extra-patch-endian
sed 's/^X//' >giftcoin/files/extra-patch-endian << 'ff86bd9616675060e353a29306817939'
X--- src/scrypt.cpp.orig	2013-12-09 18:10:12.046606050 +0000
X+++ src/scrypt.cpp	2013-12-09 18:10:25.898605023 +0000
X@@ -34,22 +34,6 @@
X #include <string.h>
X #include <openssl/sha.h>
X 
X-static inline uint32_t be32dec(const void *pp)
X-{
X-	const uint8_t *p = (uint8_t const *)pp;
X-	return ((uint32_t)(p[3]) + ((uint32_t)(p[2]) << 8) +
X-	    ((uint32_t)(p[1]) << 16) + ((uint32_t)(p[0]) << 24));
X-}
X-
X-static inline void be32enc(void *pp, uint32_t x)
X-{
X-	uint8_t *p = (uint8_t *)pp;
X-	p[3] = x & 0xff;
X-	p[2] = (x >> 8) & 0xff;
X-	p[1] = (x >> 16) & 0xff;
X-	p[0] = (x >> 24) & 0xff;
X-}
X-
X typedef struct HMAC_SHA256Context {
X 	SHA256_CTX ictx;
X 	SHA256_CTX octx;
X--- src/scrypt.h.orig	2013-12-09 15:26:17.343282984 +0000
X+++ src/scrypt.h	2013-12-09 15:45:11.032205545 +0000
X@@ -17,19 +17,4 @@
X PBKDF2_SHA256(const uint8_t *passwd, size_t passwdlen, const uint8_t *salt,
X     size_t saltlen, uint64_t c, uint8_t *buf, size_t dkLen);
X 
X-static inline uint32_t le32dec(const void *pp)
X-{
X-        const uint8_t *p = (uint8_t const *)pp;
X-        return ((uint32_t)(p[0]) + ((uint32_t)(p[1]) << 8) +
X-            ((uint32_t)(p[2]) << 16) + ((uint32_t)(p[3]) << 24));
X-}
X-
X-static inline void le32enc(void *pp, uint32_t x)
X-{
X-        uint8_t *p = (uint8_t *)pp;
X-        p[0] = x & 0xff;
X-        p[1] = (x >> 8) & 0xff;
X-        p[2] = (x >> 16) & 0xff;
X-        p[3] = (x >> 24) & 0xff;
X-}
X #endif
ff86bd9616675060e353a29306817939
echo x - giftcoin/files/pkg-message.in
sed 's/^X//' >giftcoin/files/pkg-message.in << 'cf86cb2003e0fa5d75422e4a9bffedea'
X*******************************************************************
XTo configure the GiftCoin server please edit: 
X%%PREFIX%%/etc/%%PORTNAME%%.conf
X
XYou must at least set a "rpcpassword" in the configuration file above.
X
XTo run the %%PORTNAME%%d server at startup, add the following
Xsettings to your /etc/rc.conf
X
X%%PORTNAME%%_enable="YES"
X
X*******************************************************************
cf86cb2003e0fa5d75422e4a9bffedea
echo x - giftcoin/files/giftcoin.conf.sample
sed 's/^X//' >giftcoin/files/giftcoin.conf.sample << '8a6bbbf0b7e74191ec3eea8616a33d2e'
Xrpcuser=myname
X#rpcpassword=YOU MUST SET A PASSWORD
Xmaxconnection=20
Xrpcallowip=127.0.0.1
Xrpcport=8856
Xport=8855
Xserver=1
Xdaemon=1
Xlisten=1
Xlogtimestamps=1
Xaddnode=63.247.147.163:8855
X
8a6bbbf0b7e74191ec3eea8616a33d2e
echo x - giftcoin/files/patch-bitcoin-qt_pro
sed 's/^X//' >giftcoin/files/patch-bitcoin-qt_pro << '0bba3b156f95982e4b024c6cb2dd7c2e'
X--- bitcoin-qt.pro.orig	2014-01-03 18:07:34.000000000 -0500
X+++ bitcoin-qt.pro	2014-01-03 19:02:42.000000000 -0500
X@@ -431,7 +431,7 @@
X LIBS += -lssl -lcrypto -ldb_cxx$$BDB_LIB_SUFFIX
X # -lgdi32 has to happen after -lcrypto (see  #681)
X win32:LIBS += -lws2_32 -lshlwapi -lmswsock -lole32 -loleaut32 -luuid -lgdi32
X-LIBS += -lboost_system$$BOOST_LIB_SUFFIX -lboost_filesystem$$BOOST_LIB_SUFFIX -lboost_program_options$$BOOST_LIB_SUFFIX -lboost_thread$$BOOST_THREAD_LIB_SUFFIX
X+LIBS += -lboost_system$$BOOST_LIB_SUFFIX -lboost_filesystem$$BOOST_LIB_SUFFIX -lboost_program_options$$BOOST_LIB_SUFFIX -lboost_thread$$BOOST_THREAD_LIB_SUFFIX -lboost_chrono$$BOOST_THREAD_LIB_SUFFIX
X win32:LIBS += -lboost_chrono$$BOOST_LIB_SUFFIX
X macx:LIBS += -lboost_chrono$$BOOST_LIB_SUFFIX
X 
0bba3b156f95982e4b024c6cb2dd7c2e
echo x - giftcoin/files/patch-src-leveldb-Makefile
sed 's/^X//' >giftcoin/files/patch-src-leveldb-Makefile << '2a4dc336997ebb688f125ffe2dbda031'
X--- /dev/null	2014-01-03 19:24:06.000000000 -0500
X+++ src/leveldb/Makefile	2014-01-03 19:23:15.000000000 -0500
X@@ -0,0 +1,206 @@
X+# Copyright (c) 2011 The LevelDB Authors. All rights reserved.
X+# Use of this source code is governed by a BSD-style license that can be
X+# found in the LICENSE file. See the AUTHORS file for names of contributors.
X+
X+#-----------------------------------------------
X+# Uncomment exactly one of the lines labelled (A), (B), and (C) below
X+# to switch between compilation modes.
X+
X+OPT ?= -O2 -DNDEBUG       # (A) Production use (optimized mode)
X+# OPT ?= -g2              # (B) Debug mode, w/ full line-level debugging symbols
X+# OPT ?= -O2 -g2 -DNDEBUG # (C) Profiling mode: opt, but w/debugging symbols
X+#-----------------------------------------------
X+
X+# detect what platform we're building on
X+$(shell CC=$(CC) CXX=$(CXX) TARGET_OS=$(TARGET_OS) \
X+    ./build_detect_platform build_config.mk ./)
X+# this file is generated by the previous line to set build flags and sources
X+include build_config.mk
X+
X+CFLAGS += -I. -I./include $(PLATFORM_CCFLAGS) $(OPT)
X+CXXFLAGS += -I. -I./include $(PLATFORM_CXXFLAGS) $(OPT)
X+
X+LDFLAGS += $(PLATFORM_LDFLAGS)
X+LIBS += $(PLATFORM_LIBS)
X+
X+LIBOBJECTS = $(SOURCES:.cc=.o)
X+MEMENVOBJECTS = $(MEMENV_SOURCES:.cc=.o)
X+
X+TESTUTIL = ./util/testutil.o
X+TESTHARNESS = ./util/testharness.o $(TESTUTIL)
X+
X+TESTS = \
X+	arena_test \
X+	bloom_test \
X+	c_test \
X+	cache_test \
X+	coding_test \
X+	corruption_test \
X+	crc32c_test \
X+	db_test \
X+	dbformat_test \
X+	env_test \
X+	filename_test \
X+	filter_block_test \
X+	issue178_test \
X+	log_test \
X+	memenv_test \
X+	skiplist_test \
X+	table_test \
X+	version_edit_test \
X+	version_set_test \
X+	write_batch_test
X+
X+PROGRAMS = db_bench leveldbutil $(TESTS)
X+BENCHMARKS = db_bench_sqlite3 db_bench_tree_db
X+
X+LIBRARY = libleveldb.a
X+MEMENVLIBRARY = libmemenv.a
X+
X+default: all
X+
X+# Should we build shared libraries?
X+ifneq ($(PLATFORM_SHARED_EXT),)
X+
X+ifneq ($(PLATFORM_SHARED_VERSIONED),true)
X+SHARED1 = libleveldb.$(PLATFORM_SHARED_EXT)
X+SHARED2 = $(SHARED1)
X+SHARED3 = $(SHARED1)
X+SHARED = $(SHARED1)
X+else
X+# Update db.h if you change these.
X+SHARED_MAJOR = 1
X+SHARED_MINOR = 12
X+SHARED1 = libleveldb.$(PLATFORM_SHARED_EXT)
X+SHARED2 = $(SHARED1).$(SHARED_MAJOR)
X+SHARED3 = $(SHARED1).$(SHARED_MAJOR).$(SHARED_MINOR)
X+SHARED = $(SHARED1) $(SHARED2) $(SHARED3)
X+$(SHARED1): $(SHARED3)
X+	ln -fs $(SHARED3) $(SHARED1)
X+$(SHARED2): $(SHARED3)
X+	ln -fs $(SHARED3) $(SHARED2)
X+endif
X+
X+$(SHARED3):
X+	$(CXX) $(LDFLAGS) $(PLATFORM_SHARED_LDFLAGS)$(SHARED2) $(CXXFLAGS) $(PLATFORM_SHARED_CFLAGS) $(SOURCES) -o $(SHARED3) $(LIBS)
X+
X+endif  # PLATFORM_SHARED_EXT
X+
X+all: $(SHARED) $(LIBRARY)
X+
X+check: all $(PROGRAMS) $(TESTS)
X+	for t in $(TESTS); do echo "***** Running $$t"; ./$$t || exit 1; done
X+
X+clean:
X+	-rm -f $(PROGRAMS) $(BENCHMARKS) $(LIBRARY) $(SHARED) $(MEMENVLIBRARY) */*.o */*/*.o ios-x86/*/*.o ios-arm/*/*.o build_config.mk
X+	-rm -rf ios-x86/* ios-arm/*
X+
X+$(LIBRARY): $(LIBOBJECTS)
X+	rm -f $@
X+	$(AR) -rs $@ $(LIBOBJECTS)
X+
X+db_bench: db/db_bench.o $(LIBOBJECTS) $(TESTUTIL)
X+	$(CXX) $(LDFLAGS) db/db_bench.o $(LIBOBJECTS) $(TESTUTIL) -o $@ $(LIBS)
X+
X+db_bench_sqlite3: doc/bench/db_bench_sqlite3.o $(LIBOBJECTS) $(TESTUTIL)
X+	$(CXX) $(LDFLAGS) doc/bench/db_bench_sqlite3.o $(LIBOBJECTS) $(TESTUTIL) -o $@ -lsqlite3 $(LIBS)
X+
X+db_bench_tree_db: doc/bench/db_bench_tree_db.o $(LIBOBJECTS) $(TESTUTIL)
X+	$(CXX) $(LDFLAGS) doc/bench/db_bench_tree_db.o $(LIBOBJECTS) $(TESTUTIL) -o $@ -lkyotocabinet $(LIBS)
X+
X+leveldbutil: db/leveldb_main.o $(LIBOBJECTS)
X+	$(CXX) $(LDFLAGS) db/leveldb_main.o $(LIBOBJECTS) -o $@ $(LIBS)
X+
X+arena_test: util/arena_test.o $(LIBOBJECTS) $(TESTHARNESS)
X+	$(CXX) $(LDFLAGS) util/arena_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)
X+
X+bloom_test: util/bloom_test.o $(LIBOBJECTS) $(TESTHARNESS)
X+	$(CXX) $(LDFLAGS) util/bloom_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)
X+
X+c_test: db/c_test.o $(LIBOBJECTS) $(TESTHARNESS)
X+	$(CXX) $(LDFLAGS) db/c_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)
X+
X+cache_test: util/cache_test.o $(LIBOBJECTS) $(TESTHARNESS)
X+	$(CXX) $(LDFLAGS) util/cache_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)
X+
X+coding_test: util/coding_test.o $(LIBOBJECTS) $(TESTHARNESS)
X+	$(CXX) $(LDFLAGS) util/coding_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)
X+
X+corruption_test: db/corruption_test.o $(LIBOBJECTS) $(TESTHARNESS)
X+	$(CXX) $(LDFLAGS) db/corruption_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)
X+
X+crc32c_test: util/crc32c_test.o $(LIBOBJECTS) $(TESTHARNESS)
X+	$(CXX) $(LDFLAGS) util/crc32c_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)
X+
X+db_test: db/db_test.o $(LIBOBJECTS) $(TESTHARNESS)
X+	$(CXX) $(LDFLAGS) db/db_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)
X+
X+dbformat_test: db/dbformat_test.o $(LIBOBJECTS) $(TESTHARNESS)
X+	$(CXX) $(LDFLAGS) db/dbformat_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)
X+
X+env_test: util/env_test.o $(LIBOBJECTS) $(TESTHARNESS)
X+	$(CXX) $(LDFLAGS) util/env_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)
X+
X+filename_test: db/filename_test.o $(LIBOBJECTS) $(TESTHARNESS)
X+	$(CXX) $(LDFLAGS) db/filename_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)
X+
X+filter_block_test: table/filter_block_test.o $(LIBOBJECTS) $(TESTHARNESS)
X+	$(CXX) $(LDFLAGS) table/filter_block_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)
X+
X+issue178_test: issues/issue178_test.o $(LIBOBJECTS) $(TESTHARNESS)
X+	$(CXX) $(LDFLAGS) issues/issue178_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)
X+
X+log_test: db/log_test.o $(LIBOBJECTS) $(TESTHARNESS)
X+	$(CXX) $(LDFLAGS) db/log_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)
X+
X+table_test: table/table_test.o $(LIBOBJECTS) $(TESTHARNESS)
X+	$(CXX) $(LDFLAGS) table/table_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)
X+
X+skiplist_test: db/skiplist_test.o $(LIBOBJECTS) $(TESTHARNESS)
X+	$(CXX) $(LDFLAGS) db/skiplist_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)
X+
X+version_edit_test: db/version_edit_test.o $(LIBOBJECTS) $(TESTHARNESS)
X+	$(CXX) $(LDFLAGS) db/version_edit_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)
X+
X+version_set_test: db/version_set_test.o $(LIBOBJECTS) $(TESTHARNESS)
X+	$(CXX) $(LDFLAGS) db/version_set_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)
X+
X+write_batch_test: db/write_batch_test.o $(LIBOBJECTS) $(TESTHARNESS)
X+	$(CXX) $(LDFLAGS) db/write_batch_test.o $(LIBOBJECTS) $(TESTHARNESS) -o $@ $(LIBS)
X+
X+$(MEMENVLIBRARY) : $(MEMENVOBJECTS)
X+	rm -f $@
X+	$(AR) -rs $@ $(MEMENVOBJECTS)
X+
X+memenv_test : helpers/memenv/memenv_test.o $(MEMENVLIBRARY) $(LIBRARY) $(TESTHARNESS)
X+	$(CXX) $(LDFLAGS) helpers/memenv/memenv_test.o $(MEMENVLIBRARY) $(LIBRARY) $(TESTHARNESS) -o $@ $(LIBS)
X+
X+ifeq ($(PLATFORM), IOS)
X+# For iOS, create universal object files to be used on both the simulator and
X+# a device.
X+PLATFORMSROOT=/Applications/Xcode.app/Contents/Developer/Platforms
X+SIMULATORROOT=$(PLATFORMSROOT)/iPhoneSimulator.platform/Developer
X+DEVICEROOT=$(PLATFORMSROOT)/iPhoneOS.platform/Developer
X+IOSVERSION=$(shell defaults read $(PLATFORMSROOT)/iPhoneOS.platform/version CFBundleShortVersionString)
X+
X+.cc.o:
X+	mkdir -p ios-x86/$(dir $@)
X+	$(CXX) $(CXXFLAGS) -isysroot $(SIMULATORROOT)/SDKs/iPhoneSimulator$(IOSVERSION).sdk -arch i686 -c $< -o ios-x86/$@
X+	mkdir -p ios-arm/$(dir $@)
X+	$(DEVICEROOT)/usr/bin/$(CXX) $(CXXFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk -arch armv6 -arch armv7 -c $< -o ios-arm/$@
X+	lipo ios-x86/$@ ios-arm/$@ -create -output $@
X+
X+.c.o:
X+	mkdir -p ios-x86/$(dir $@)
X+	$(CC) $(CFLAGS) -isysroot $(SIMULATORROOT)/SDKs/iPhoneSimulator$(IOSVERSION).sdk -arch i686 -c $< -o ios-x86/$@
X+	mkdir -p ios-arm/$(dir $@)
X+	$(DEVICEROOT)/usr/bin/$(CC) $(CFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk -arch armv6 -arch armv7 -c $< -o ios-arm/$@
X+	lipo ios-x86/$@ ios-arm/$@ -create -output $@
X+
X+else
X+.cc.o:
X+	$(CXX) $(CXXFLAGS) -c $< -o $@
X+
X+.c.o:
X+	$(CC) $(CFLAGS) -c $< -o $@
X+endif
2a4dc336997ebb688f125ffe2dbda031
echo x - giftcoin/files/patch-src__scrypt.h
sed 's/^X//' >giftcoin/files/patch-src__scrypt.h << '39c3adec26edc59c6cf5db0d5715525f'
X--- ./src/scrypt.h.orig	2014-01-10 01:38:53.000000000 +0000
X+++ ./src/scrypt.h	2014-02-09 05:45:03.133009188 +0000
X@@ -27,19 +27,4 @@
X PBKDF2_SHA256(const uint8_t *passwd, size_t passwdlen, const uint8_t *salt,
X     size_t saltlen, uint64_t c, uint8_t *buf, size_t dkLen);
X 
X-static inline uint32_t le32dec(const void *pp)
X-{
X-        const uint8_t *p = (uint8_t const *)pp;
X-        return ((uint32_t)(p[0]) + ((uint32_t)(p[1]) << 8) +
X-            ((uint32_t)(p[2]) << 16) + ((uint32_t)(p[3]) << 24));
X-}
X-
X-static inline void le32enc(void *pp, uint32_t x)
X-{
X-        uint8_t *p = (uint8_t *)pp;
X-        p[0] = x & 0xff;
X-        p[1] = (x >> 8) & 0xff;
X-        p[2] = (x >> 16) & 0xff;
X-        p[3] = (x >> 24) & 0xff;
X-}
X #endif
39c3adec26edc59c6cf5db0d5715525f
echo x - giftcoin/files/patch-src__scrypt.cpp
sed 's/^X//' >giftcoin/files/patch-src__scrypt.cpp << 'ebde54faa7c10c4877048177f3977174'
X--- ./src/scrypt.cpp.orig	2014-01-10 01:38:53.000000000 +0000
X+++ ./src/scrypt.cpp	2014-02-09 05:45:03.131006405 +0000
X@@ -33,6 +33,7 @@
X #include <stdint.h>
X #include <string.h>
X #include <openssl/sha.h>
X+#include <boost/lexical_cast.hpp>
X 
X #if defined(USE_SSE2) && !defined(USE_SSE2_ALWAYS)
X #ifdef _MSC_VER
X@@ -44,22 +45,6 @@
X #endif
X #endif
X 
X-static inline uint32_t be32dec(const void *pp)
X-{
X-	const uint8_t *p = (uint8_t const *)pp;
X-	return ((uint32_t)(p[3]) + ((uint32_t)(p[2]) << 8) +
X-	    ((uint32_t)(p[1]) << 16) + ((uint32_t)(p[0]) << 24));
X-}
X-
X-static inline void be32enc(void *pp, uint32_t x)
X-{
X-	uint8_t *p = (uint8_t *)pp;
X-	p[3] = x & 0xff;
X-	p[2] = (x >> 8) & 0xff;
X-	p[1] = (x >> 16) & 0xff;
X-	p[0] = (x >> 24) & 0xff;
X-}
X-
X typedef struct HMAC_SHA256Context {
X 	SHA256_CTX ictx;
X 	SHA256_CTX octx;
ebde54faa7c10c4877048177f3977174
echo x - giftcoin/Makefile
sed 's/^X//' >giftcoin/Makefile << '546e8b5041a6edc1dd09f3db117f4b0b'
X# Created by: Daniel Morante <daniel@morante.net>
X# $FreeBSD$
X
XPORTNAME=	giftcoin
XPORTVERSION=	1.0.0.0
XCATEGORIES=	net-p2p finance
XMASTER_SITES=	GH
X
XMAINTAINER=	daniel@morante.net
XCOMMENT=	Peer-to-Peer crypto currency using scrypt as a proof-of-work algorithm
X
XLICENSE=	MIT
X
XLIB_DEPENDS=	libboost_date_time.so:${PORTSDIR}/devel/boost-libs
X
XOPTIONS_DEFINE=	X11 UPNP QRCODES
XOPTIONS_DEFAULT=	X11 QRCODES
XUPNP_DESC=	Build with UPNP support
XQRCODES_DESC=	Build with QR code display
X
XUSE_GITHUB=	yes
XGH_ACCOUNT=	GiftCoin
XGH_PROJECT=	${PORTNAME}-release
XGH_COMMIT=	c164bc0
XGH_TAGNAME=	c164bc0
X
XUSES=		gmake
XUSE_OPENSSL=	yes
XUSE_BDB=	yes
XWANT_BDB_VER=	48
X
XCXXFLAGS+=	-I${LOCALBASE}/include -I${BDB_INCLUDE_DIR}
XCXXFLAGS+=	-L${LOCALBASE}/lib -L${BDB_LIB_DIR}
XCXXFLAGS+=	-Wno-invalid-offsetof
X
X.include <bsd.port.options.mk>
X
X.if ${PORT_OPTIONS:MX11}
XPLIST_SUB+=	X11=""
X.else
XSUB_LIST+=	PORTNAME=${PORTNAME}
XUSE_RC_SUBR=	${PORTNAME}
XSUB_FILES=	pkg-message
XPLIST_SUB+=	X11="@comment "
X.endif
X
X.if ${PORT_OPTIONS:MX11}
XUSE_QT4=	corelib gui qmake_build linguist uic moc rcc
XBINARY=		${PORTNAME}-qt
XPLIST_SUB+=	HEADLESS="@comment "
X.else
XBINARY=		${PORTNAME}d
XMAKE_ARGS+=	-C ${WRKSRC}/src
XPLIST_SUB+=	HEADLESS=""
X.endif
X
X.if ${PORT_OPTIONS:MQRCODES}
XLIB_DEPENDS+=	libqrencode.so:${PORTSDIR}/graphics/libqrencode
XQMAKE_USE_QRCODE=1
X.else
XQMAKE_USE_QRCODE=0
X.endif
X
XPLIST_SUB+=	EXECUTABLE="bin/${BINARY}" \
X			PORTNAME=${PORTNAME}
X
X.if ${PORT_OPTIONS:MUPNP}
XLIB_DEPENDS+=	libminiupnpc.so:${PORTSDIR}/net/miniupnpc
XQMAKE_USE_UPNP=	1
X.else
XQMAKE_USE_UPNP=	-
X.endif
X
X.include <bsd.port.pre.mk>
X
X.if ${OSVERSION} >= 1000000
XEXTRA_PATCHES+=	${FILESDIR}/extra-patch-endian
X.endif
X
Xpost-patch:
X	@${REINPLACE_CMD} -e 's|%%PREFIX%%|${PREFIX}|' ${WRKSRC}/src/makefile.unix
X.if !${PORT_OPTIONS:MX11}
X	@cd ${WRKSRC}/src && ${CP} -p makefile.unix Makefile
X	@${REINPLACE_CMD} \
X		-e 's|^USE_UPNP.*$$|USE_UPNP=${QMAKE_USE_UPNP}|' \
X		-e 's|-l pthread|${PTHREAD_LIBS}|g' \
X		-e 's:-l dl::' \
X		${WRKSRC}/src/Makefile
X.endif
X
Xdo-configure:
X.if ${PORT_OPTIONS:MX11}
X	cd ${WRKSRC} && ${SETENV} ${QMAKE_ENV} \
X		${QMAKE} ${QMAKE_ARGS} USE_UPNP=${QMAKE_USE_UPNP} USE_QRCODE=${QMAKE_USE_QRCODE} \
X		QMAKE_LRELEASE=lrelease-qt4 PREFIX=${PREFIX} INCLUDEPATH=${BDB_INCLUDE_DIR} \
X		QMAKE_LIBDIR+=${BDB_LIB_DIR} ${PORTNAME}-qt.pro
X.endif
X
Xdo-install:
X.if ${PORT_OPTIONS:MX11}
X	${INSTALL_PROGRAM} -s ${WRKSRC}/${BINARY} ${STAGEDIR}${PREFIX}/bin/${BINARY}
X	${REINPLACE_CMD} -e 's,=/usr,=${PREFIX},' \
X		-e 's,bitcoin,${PORTNAME},g' \
X		-e 's,Bitcoin,GiftCoin,g' \
X		-e 's,128,,g' ${WRKSRC}/contrib/debian/bitcoin-qt.desktop
X	${INSTALL} ${WRKSRC}/contrib/debian/bitcoin-qt.desktop ${STAGEDIR}${PREFIX}/share/applications/${PORTNAME}-qt.desktop
X	${INSTALL} ${WRKSRC}/src/qt/res/icons/bitcoin.png ${STAGEDIR}${PREFIX}/share/pixmaps/${PORTNAME}.png
X
X.else
X	${INSTALL_PROGRAM} -s ${WRKSRC}/src/${BINARY} ${STAGEDIR}${PREFIX}/bin/${BINARY}
X	${INSTALL} ${FILESDIR}/${PORTNAME}.conf.sample ${STAGEDIR}${PREFIX}/etc/${PORTNAME}.conf.sample
X	@if [ ! -f ${PREFIX}/etc/${PORTNAME}.conf ]; then \
X		${CP} -p ${FILESDIR}/${PORTNAME}.conf.sample ${STAGEDIR}${PREFIX}/etc/${PORTNAME}.conf; \
X	fi
X.endif
X
X.include <bsd.port.post.mk>
546e8b5041a6edc1dd09f3db117f4b0b
echo x - giftcoin/pkg-descr
sed 's/^X//' >giftcoin/pkg-descr << '9b8a40d6e9ae1c084dc5916e072371cb'
XGiftcoin is a free open source peer-to-peer electronic cash system that
Xis completely decentralized, without the need for a central server or
Xtrusted parties. Users hold the crypto keys to their own money and
Xtransact directly with each other, with the help of a P2P network to
Xcheck for double-spending.
X
XWWW: https://github.com/GiftCoin/giftcoin-release
9b8a40d6e9ae1c084dc5916e072371cb
echo x - giftcoin/distinfo
sed 's/^X//' >giftcoin/distinfo << 'cca7d182db92b6545244886b419e35bc'
XSHA256 (giftcoin-1.0.0.0.tar.gz) = 4d3a81545770c9e69deefbccaa3ced6811eada252d36f5f02369ecf7ae746f10
XSIZE (giftcoin-1.0.0.0.tar.gz) = 5579728
cca7d182db92b6545244886b419e35bc
echo x - giftcoin/pkg-plist
sed 's/^X//' >giftcoin/pkg-plist << '96ddcea088d9cc13a98460f47cc26db4'
X%%EXECUTABLE%%
X%%X11%%share/applications/%%PORTNAME%%-qt.desktop
X%%X11%%share/pixmaps/%%PORTNAME%%.png
X%%HEADLESS%%@unexec if cmp -s %D/etc/%%PORTNAME%%.conf.sample %D/etc/%%PORTNAME%%.conf; then rm -f %D/etc/%%PORTNAME%%.conf; fi
X%%HEADLESS%%etc/%%PORTNAME%%.conf.sample
X%%HEADLESS%%@exec if [ ! -f %D/etc/%%PORTNAME%%.conf ] ; then cp -p %D/%F %B/%%PORTNAME%%.conf; fi
96ddcea088d9cc13a98460f47cc26db4
exit

