# This is a shell archive.  Save it in a file, remove anything before
# this line, and then unpack it by entering "sh file".  Note, it may
# create directories; files and directories will be owned by you and
# have default permissions.
#
# This archive contains:
#
#	nautiluscoin
#	nautiluscoin/files
#	nautiluscoin/files/pkg-message.in
#	nautiluscoin/files/patch-src-util.h
#	nautiluscoin/files/patch-src__scrypt.cpp
#	nautiluscoin/files/nautiluscoin.conf.sample
#	nautiluscoin/files/nautiluscoin.in
#	nautiluscoin/pkg-descr
#	nautiluscoin/distinfo
#	nautiluscoin/pkg-plist
#	nautiluscoin/Makefile
#
echo c - nautiluscoin
mkdir -p nautiluscoin > /dev/null 2>&1
echo c - nautiluscoin/files
mkdir -p nautiluscoin/files > /dev/null 2>&1
echo x - nautiluscoin/files/pkg-message.in
sed 's/^X//' >nautiluscoin/files/pkg-message.in << '37cc875f788c356be8d90a0207a87a44'
X*******************************************************************
XTo configure the Nautiluscoin server please edit: 
X%%PREFIX%%/etc/%%PORTNAME%%.conf
X
XYou must at least set a "rpcpassword" in the configuration file above.
X
XTo run the %%PORTNAME%%d server at startup, add the following
Xsettings to your /etc/rc.conf
X
X%%PORTNAME%%_enable="YES"
X
X*******************************************************************
37cc875f788c356be8d90a0207a87a44
echo x - nautiluscoin/files/patch-src-util.h
sed 's/^X//' >nautiluscoin/files/patch-src-util.h << 'b9575be09b8b03c4498e962a124798c9'
X--- src/util.h.orig	2014-09-29 22:38:24 UTC
X+++ src/util.h
X@@ -22,6 +22,7 @@
X #include <string>
X #include <utility>
X #include <vector>
X+#include <cstdarg>
X 
X #ifndef WIN32
X #include <sys/resource.h>
b9575be09b8b03c4498e962a124798c9
echo x - nautiluscoin/files/patch-src__scrypt.cpp
sed 's/^X//' >nautiluscoin/files/patch-src__scrypt.cpp << '16ade0565d27648fff3788b64e1548ea'
X--- src/scrypt.cpp.orig	2014-09-29 22:38:24 UTC
X+++ src/scrypt.cpp
X@@ -32,39 +32,7 @@
X #include <stdint.h>
X #include <string.h>
X #include <openssl/sha.h>
X-
X-static inline uint32_t be32dec(const void *pp)
X-{
X-	const uint8_t *p = (uint8_t const *)pp;
X-	return ((uint32_t)(p[3]) + ((uint32_t)(p[2]) << 8) +
X-	    ((uint32_t)(p[1]) << 16) + ((uint32_t)(p[0]) << 24));
X-}
X-
X-static inline void be32enc(void *pp, uint32_t x)
X-{
X-	uint8_t *p = (uint8_t *)pp;
X-	p[3] = x & 0xff;
X-	p[2] = (x >> 8) & 0xff;
X-	p[1] = (x >> 16) & 0xff;
X-	p[0] = (x >> 24) & 0xff;
X-}
X-
X-static inline uint32_t le32dec(const void *pp)
X-{
X-	const uint8_t *p = (uint8_t const *)pp;
X-	return ((uint32_t)(p[0]) + ((uint32_t)(p[1]) << 8) +
X-	    ((uint32_t)(p[2]) << 16) + ((uint32_t)(p[3]) << 24));
X-}
X-
X-static inline void le32enc(void *pp, uint32_t x)
X-{
X-	uint8_t *p = (uint8_t *)pp;
X-	p[0] = x & 0xff;
X-	p[1] = (x >> 8) & 0xff;
X-	p[2] = (x >> 16) & 0xff;
X-	p[3] = (x >> 24) & 0xff;
X-}
X-
X+#include <boost/lexical_cast.hpp>
X 
X typedef struct HMAC_SHA256Context {
X 	SHA256_CTX ictx;
16ade0565d27648fff3788b64e1548ea
echo x - nautiluscoin/files/nautiluscoin.conf.sample
sed 's/^X//' >nautiluscoin/files/nautiluscoin.conf.sample << '0b5ad453de58474567e9279157801dfd'
Xrpcuser=myname
X#rpcpassword=YOU MUST SET A PASSWORD
Xmaxconnections=80
Xrpcallowip=127.0.0.1
Xrpcport=1161
Xport=11161
Xserver=1
Xdaemon=1
Xlisten=1
Xlogtimestamps=1
Xgen=0
Xaddnode=nautiluscoin.securepayment.cc
Xaddnode=54.186.223.183
Xaddnode=54.187.101.97
Xaddnode=74.208.230.160
Xaddnode=184.155.218.183
Xaddnode=71.227.74.98
Xaddnode=188.194.8.82
Xaddnode=109.201.154.157
Xaddnode=184.155.218.183
0b5ad453de58474567e9279157801dfd
echo x - nautiluscoin/files/nautiluscoin.in
sed 's/^X//' >nautiluscoin/files/nautiluscoin.in << '1f6b08f259ffec17c641738c9039b961'
X#!/bin/sh
X#
X# $FreeBSD$
X#
X
X# PROVIDE: %%PORTNAME%%
X# REQUIRE: LOGIN
X# KEYWORD: shutdown
X
X#
X# Add the following lines to /etc/rc.conf.local or /etc/rc.conf
X# to enable this service:
X#
X# %%PORTNAME%%_enable (bool):	Set to NO by default.
X#				Set it to YES to enable %%PORTNAME%%.
X# %%PORTNAME%%_config (path):	Set to %%PREFIX%%/etc/%%PORTNAME%%.conf
X#				by default.
X# %%PORTNAME%%_user:	The user account %%PORTNAME%% daemon runs as
X#				It uses 'root' user by default.
X# %%PORTNAME%%_group:	The group account %%PORTNAME%% daemon runs as
X#				It uses 'wheel' group by default.
X# %%PORTNAME%%_datadir (str):	Default to "/var/db/%%PORTNAME%%"
X#				Base data directory.
X
X. /etc/rc.subr
X
Xname=%%PORTNAME%%
Xrcvar=%%PORTNAME%%_enable
X
X: ${%%PORTNAME%%_enable:=NO}
X: ${%%PORTNAME%%_config=%%PREFIX%%/etc/%%PORTNAME%%.conf}
X: ${%%PORTNAME%%_datadir=/var/db/%%PORTNAME%%}
X: ${%%PORTNAME%%_user="root"}
X: ${%%PORTNAME%%_group="wheel"}
X
Xrequired_files=${%%PORTNAME%%_config}
Xcommand=%%PREFIX%%/bin/%%PORTNAME%%d
X%%PORTNAME%%_chdir=${%%PORTNAME%%_datadir}
Xpidfile="${%%PORTNAME%%_datadir}/%%PORTNAME%%d.pid"
Xstop_cmd=%%PORTNAME%%_stop
Xcommand_args="-conf=${%%PORTNAME%%_config} -datadir=${%%PORTNAME%%_datadir} -noupnp -daemon -pid=${pidfile}"
Xstart_precmd="${name}_prestart"
X
X%%PORTNAME%%_create_datadir()
X{
X	echo "Creating data directory"
X	eval mkdir -p ${%%PORTNAME%%_datadir}
X	[ $? -eq 0 ] && chown -R ${%%PORTNAME%%_user}:${%%PORTNAME%%_group} ${%%PORTNAME%%_datadir}
X	#ln -s ${%%PORTNAME%%_datadir} /.%%PORTNAME%%
X}
X
X%%PORTNAME%%_prestart()
X{
X	if [ ! -d "${%%PORTNAME%%_datadir}/." ]; then
X		%%PORTNAME%%_create_datadir || return 1
X	fi
X}
X
X%%PORTNAME%%_requirepidfile()
X{
X	if [ ! "0`check_pidfile ${pidfile} ${command}`" -gt 1 ]; then
X		echo "${name} not running? (check $pidfile)."
X		exit 1
X	fi
X}
X
X%%PORTNAME%%_stop()
X{
X    %%PORTNAME%%_requirepidfile
X
X	echo "Stopping ${name}."
X	eval ${command} -conf=${%%PORTNAME%%_config} -datadir=${%%PORTNAME%%_datadir} stop
X	wait_for_pids ${rc_pid}
X}
X
Xload_rc_config $name
Xrun_rc_command "$1"
1f6b08f259ffec17c641738c9039b961
echo x - nautiluscoin/pkg-descr
sed 's/^X//' >nautiluscoin/pkg-descr << 'cbc3412b90a13a6a1e0d9eac0bfeb9a2'
XNautiluscoin is a free open source peer-to-peer electronic cash system that
Xis completely decentralized, without the need for a central server or
Xtrusted parties. Users hold the crypto keys to their own money and
Xtransact directly with each other, with the help of a P2P network to
Xcheck for double-spending.
X
XWWW: http://www.nautiluscoin.com
cbc3412b90a13a6a1e0d9eac0bfeb9a2
echo x - nautiluscoin/distinfo
sed 's/^X//' >nautiluscoin/distinfo << 'de5e1e8d684bf6a035a0d3e1c7edbc0a'
XSHA256 (nautiluscoin-1.2.0.0.tar.gz) = dea4a0e84984a01e0c9bf3149a58a6dd65938fe55f23878fc3a85ee5155ed6dc
XSIZE (nautiluscoin-1.2.0.0.tar.gz) = 10257136
de5e1e8d684bf6a035a0d3e1c7edbc0a
echo x - nautiluscoin/pkg-plist
sed 's/^X//' >nautiluscoin/pkg-plist << '2e7c11463e477b27bf5f0865162a6120'
X%%NO_X11%%%%EXECUTABLE_DAEMON%%
X%%NO_X11%%@sample etc/%%PORTNAME%%.conf.sample
X%%CLI%%%%EXECUTABLE_CLI%%
X%%X11%%%%EXECUTABLE_QT%%
X%%X11%%share/applications/%%PORTNAME%%-qt.desktop
X%%X11%%share/pixmaps/%%PORTNAME%%.png
2e7c11463e477b27bf5f0865162a6120
echo x - nautiluscoin/Makefile
sed 's/^X//' >nautiluscoin/Makefile << '654b13b28fbbdd7befc081321f5aa402'
X# Created by: Daniel Morante <daniel@morante.net>
X# $FreeBSD $
X
XPORTNAME=	nautiluscoin
XPORTVERSION=	1.2.0.0
XCATEGORIES=	net-p2p finance
XMASTER_SITES=	GH
X
XMAINTAINER=	daniel@morante.net
XCOMMENT=	Peer-to-Peer crypto currency with quick transactions
X
XLICENSE=	MIT
X
XBUILD_DEPENDS=	pkg-config:${PORTSDIR}/devel/pkgconf
XLIB_DEPENDS=	libboost_date_time.so:${PORTSDIR}/devel/boost-libs
X
XUSE_GITHUB=	yes
XGH_ACCOUNT=	${PORTNAME}
XGH_PROJECT=	${PORTNAME}
XGH_COMMIT=	536087d
XGH_TAGNAME=	536087d
X
XOPTIONS_DEFINE=	X11 UPNP WALLET CLI TEST
XOPTIONS_SUB=	yes
X
XWALLET_DESC=	Build wallet or P2P server node only
XQRCODES_DESC=	Enable QR code display when building graphical interface
XCLI_DESC=	Build command line RPC client
X
XOPTIONS_DEFAULT=	X11 WALLET QRCODES
XOPTIONS_GROUP=	X11
XOPTIONS_GROUP_X11=	QRCODES
X
XUPNP_CONFIGURE_WITH=	miniupnpc
XUPNP_LIB_DEPENDS=	libminiupnpc.so:${PORTSDIR}/net/miniupnpc
X
XX11_CONFIGURE_WITH=	gui
XX11_CONFIGURE_ON=	--without-daemon
XX11_CONFIGURE_OFF=	--with-daemon
XX11_BUILD_DEPENDS=	protoc:${PORTSDIR}/devel/protobuf
XX11_USE=	qt4=corelib,gui,qmake_build,linguist,uic,moc,rcc,qtestlib_build
XX11_USES=	desktop-file-utils
X
XWALLET_CONFIGURE_ENABLE=	wallet
XWALLET_CXXFLAGS=	-I${BDB_INCLUDE_DIR} -L${BDB_LIB_DIR}
XWALLET_USE=	bdb=yes
X
XQRCODES_LIB_DEPENDS=	libqrencode.so:${PORTSDIR}/graphics/libqrencode
XQRCODES_CONFIGURE_WITH=	qrencode
X
XCLI_CONFIGURE_WITH=	cli
X
XTEST_CONFIGURE_ENABLE=	tests
XTEST_ALL_TARGET=	check
X
XAUTOMAKE_ARGS+=	--add-missing
XUSE_AUTOTOOLS=	aclocal autoheader automake autoconf
XCONFIGURE_ENV=	SSL_LIBS="-lssl" CRYPTO_LIBS="-lcrypto" SSL_CFLAGS="-I/usr/include" CRYPTO_CFLAGS="-I/usr/include"
X
XUSES=		gmake
XUSE_OPENSSL=	yes
XWANT_BDB_VER=	48
X
XCXXFLAGS+=	-I${LOCALBASE}/include
XCXXFLAGS+=	-L${LOCALBASE}/lib
XCXXFLAGS+=	-Wno-invalid-offsetof
X
XQT_BINARY=		${PORTNAME}-qt
XCLI_BINARY=		${PORTNAME}-cli
XDAEMON=		${PORTNAME}d
X
XPLIST_SUB+=	EXECUTABLE_QT=bin/${QT_BINARY} \
X			EXECUTABLE_CLI=bin/${CLI_BINARY} \
X			EXECUTABLE_DAEMON=bin/${DAEMON} \
X			PORTNAME=${PORTNAME}
X
X.include <bsd.port.options.mk>
X
X.if empty(PORT_OPTIONS:MX11) && !empty(PORT_OPTIONS:MQRCODES)
XBROKEN=	QRCODES requires X11 support.  Run 'make config' again!
X.endif
X
X# tests will currently fail
X.if ${PORT_OPTIONS:MTEST}
XBROKEN=	automated testing fails
X.endif
X
X.if ! ${PORT_OPTIONS:MX11}
XUSE_RC_SUBR=	${PORTNAME}
XSUB_LIST+=	PORTNAME=${PORTNAME}
XSUB_FILES=	pkg-message
X.endif
X
X.if ${OSVERSION} >= 1000000
XCXXFLAGS+=	-Qunused-arguments
X.endif
X
Xpost-extract:
X	@${RM} -f ${WRKSRC}/src/qt/paymentrequest.pb.cc
X	@${RM} -f ${WRKSRC}/src/qt/paymentrequest.pb.h
X
Xpost-patch:
X	${MKDIR} ${WRKSRC}/src/build-aux
X
Xdo-install:
X.if ${PORT_OPTIONS:MCLI}
X	${INSTALL_PROGRAM} -s ${WRKSRC}/src/${CLI_BINARY} ${STAGEDIR}${PREFIX}/bin/${CLI_BINARY}
X.endif
X
X.if ${PORT_OPTIONS:MX11}
X	${INSTALL_PROGRAM} -s ${WRKSRC}/src/qt/${QT_BINARY} ${STAGEDIR}${PREFIX}/bin/${QT_BINARY}
X	${REINPLACE_CMD} -e 's,=/usr,=${PREFIX},' \
X		-e 's,128,.png,g' ${WRKSRC}/contrib/debian/${PORTNAME}-qt.desktop
X	${INSTALL} ${WRKSRC}/contrib/debian/${PORTNAME}-qt.desktop ${STAGEDIR}${PREFIX}/share/applications/${PORTNAME}-qt.desktop
X	${INSTALL} ${WRKSRC}/src/qt/res/icons/${PORTNAME}.png ${STAGEDIR}${PREFIX}/share/pixmaps/${PORTNAME}.png
X.else
X	${INSTALL_PROGRAM} -s ${WRKSRC}/src/${DAEMON} ${STAGEDIR}${PREFIX}/bin/${DAEMON}
X	${INSTALL_DATA} ${FILESDIR}/${PORTNAME}.conf.sample ${STAGEDIR}${PREFIX}/etc/${PORTNAME}.conf.sample
X.endif
X
X.include <bsd.port.mk>
654b13b28fbbdd7befc081321f5aa402
exit

