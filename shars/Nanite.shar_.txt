# This is a shell archive.  Save it in a file, remove anything before
# this line, and then unpack it by entering "sh file".  Note, it may
# create directories; files and directories will be owned by you and
# have default permissions.
#
# This archive contains:
#
#	Nanite
#	Nanite/files
#	Nanite/files/pkg-message.in
#	Nanite/files/patch-src-makefile_bsd
#	Nanite/files/Nanite.in
#	Nanite/files/patch-src-util_h
#	Nanite/files/Nanite.conf.sample
#	Nanite/files/patch-Nanite-qt_pro
#	Nanite/files/patch-src-smessage.cpp
#	Nanite/Makefile
#	Nanite/distinfo
#	Nanite/pkg-descr
#	Nanite/pkg-plist
#
echo c - Nanite
mkdir -p Nanite > /dev/null 2>&1
echo c - Nanite/files
mkdir -p Nanite/files > /dev/null 2>&1
echo x - Nanite/files/pkg-message.in
sed 's/^X//' >Nanite/files/pkg-message.in << '9013860a77d16cebf47fb528278bcec3'
X*******************************************************************
XTo configure the Nanite server please edit: 
X%%PREFIX%%/etc/%%PORTNAME%%.conf
X
XYou must at least set a "rpcpassword" in the configuration file above.
X
XTo run the %%PORTNAME%%d server at startup, add the following
Xsettings to your /etc/rc.conf
X
X%%PORTNAME%%_enable="YES"
X
X*******************************************************************
9013860a77d16cebf47fb528278bcec3
echo x - Nanite/files/patch-src-makefile_bsd
sed 's/^X//' >Nanite/files/patch-src-makefile_bsd << '04cffa2afe349cce22e7fa98ab98a5b8'
X--- src/makefile.bsd.orig	2014-11-06 18:18:30.000000000 -0500
X+++ src/makefile.bsd	2014-11-06 20:26:35.000000000 -0500
X@@ -9,6 +9,11 @@
X 
X DEFS=-DBOOST_SPIRIT_THREADSAFE
X 
X+BOOST_INCLUDE_PATH=/usr/local/include
X+BDB_INCLUDE_PATH=/usr/local/include/db48
X+BOOST_LIB_PATH=/usr/local/lib
X+BDB_LIB_PATH=/usr/local/lib/db48
X+
X DEFS += $(addprefix -I,$(CURDIR) $(CURDIR)/obj $(BOOST_INCLUDE_PATH) $(BDB_INCLUDE_PATH) $(OPENSSL_INCLUDE_PATH))
X LIBS = $(addprefix -L,$(BOOST_LIB_PATH) $(BDB_LIB_PATH) $(OPENSSL_LIB_PATH))
X 
X@@ -28,6 +33,7 @@
X    -l boost_filesystem$(BOOST_LIB_SUFFIX) \
X    -l boost_program_options$(BOOST_LIB_SUFFIX) \
X    -l boost_thread$(BOOST_LIB_SUFFIX) \
X+   -l boost_chrono$(BOOST_LIB_SUFFIX) \
X    -l db_cxx$(BDB_LIB_SUFFIX) \
X    -l ssl \
X    -l crypto \
X@@ -48,7 +54,6 @@
X LIBS+= \
X  -Wl,-B$(LMODE2) \
X    -l z \
X-   -l dl \
X    -l pthread
X 
X 
X@@ -90,7 +95,7 @@
X 
X # CXXFLAGS can be specified on the make command line, so we use xCXXFLAGS that only
X # adds some defaults in front. Unfortunately, CXXFLAGS=... $(CXXFLAGS) does not work.
X-xCXXFLAGS=-O0 -msse2 -pthread -Wall -Wextra -Wno-ignored-qualifiers -Wformat -Wformat-security -Wno-unused-parameter \
X+xCXXFLAGS=-O2 -msse2 -pthread -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter \
X     $(DEBUGFLAGS) $(DEFS) $(HARDENING) $(CXXFLAGS)
X 
X # LDFLAGS can be specified on the make command line, so we use xLDFLAGS that only
X@@ -109,8 +114,8 @@
X     obj/init.o \
X     obj/irc.o \
X     obj/keystore.o \
X-    obj/main.o \
X     obj/miner.o \
X+    obj/main.o \
X     obj/net.o \
X     obj/protocol.o \
X     obj/bitcoinrpc.o \
X@@ -120,7 +125,9 @@
X     obj/rpcwallet.o \
X     obj/rpcblockchain.o \
X     obj/rpcrawtransaction.o \
X+    obj/rpcsmessage.o \
X     obj/script.o \
X+	obj/scrypt.o \
X     obj/sync.o \
X     obj/util.o \
X     obj/wallet.o \
X@@ -128,10 +135,22 @@
X     obj/noui.o \
X     obj/kernel.o \
X     obj/pbkdf2.o \
X-    obj/scrypt.o \
X+	obj/cubehash.o \
X+    obj/luffa.o \
X+    obj/aes_helper.o \
X+    obj/echo.o \
X+    obj/shavite.o \
X+    obj/simd.o \
X+    obj/blake.o\
X+    obj/bmw.o\
X+    obj/groestl.o\
X+    obj/jh.o\
X+    obj/keccak.o\
X+    obj/skein.o \
X     obj/scrypt-arm.o \
X     obj/scrypt-x86.o \
X     obj/scrypt-x86_64.o \
X+    obj/smessage.o \
X     obj/zerocoin/Accumulator.o \
X     obj/zerocoin/AccumulatorProofOfKnowledge.o \
X     obj/zerocoin/Coin.o \
X@@ -150,7 +169,7 @@
X DEFS += $(addprefix -I,$(CURDIR)/leveldb/helpers)
X OBJS += obj/txdb-leveldb.o
X leveldb/libleveldb.a:
X-	@echo "Building LevelDB ..."; cd leveldb; make libleveldb.a libmemenv.a; cd ..;
X+	@echo "Building LevelDB ..." && cd leveldb && $(MAKE) CC=$(CC) CXX=$(CXX) OPT="$(xCXXFLAGS)" libleveldb.a libmemenv.a && cd ..
X obj/txdb-leveldb.o: leveldb/libleveldb.a
X 
X # auto-generated dependencies:
X@@ -169,7 +188,14 @@
X 
X obj/scrypt-arm.o: scrypt-arm.S
X 	$(CXX) -c $(xCXXFLAGS) -MMD -o $@ $<
X-
X+	
X+obj/%.o: %.c
X+	$(CXX) -c $(xCXXFLAGS) -fpermissive -MMD -MF $(@:%.o=%.d) -o $@ $<
X+	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
X+	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
X+              -e '/^$$/ d' -e 's/$$/ :/' < $(@:%.o=%.d) >> $(@:%.o=%.P); \
X+	      
X+	rm -f $(@:%.o=%.d)
X obj/%.o: %.cpp
X 	$(CXX) -c $(xCXXFLAGS) -MMD -MF $(@:%.o=%.d) -o $@ $<
X 	@cp $(@:%.o=%.d) $(@:%.o=%.P); \
04cffa2afe349cce22e7fa98ab98a5b8
echo x - Nanite/files/Nanite.in
sed 's/^X//' >Nanite/files/Nanite.in << '055c3c8359b7d64f36244721baf4d7cc'
X#!/bin/sh
X#
X# $FreeBSD: $
X#
X
X# PROVIDE: %%PORTNAME%%
X# REQUIRE: LOGIN
X# KEYWORD: shutdown
X
X#
X# Add the following lines to /etc/rc.conf.local or /etc/rc.conf
X# to enable this service:
X#
X# %%PORTNAME%%_enable (bool):	Set to NO by default.
X#				Set it to YES to enable %%PORTNAME%%.
X# %%PORTNAME%%_config (path):	Set to %%PREFIX%%/etc/%%PORTNAME%%.conf
X#				by default.
X# %%PORTNAME%%_user:	The user account %%PORTNAME%% daemon runs as
X#				It uses 'root' user by default.
X# %%PORTNAME%%_group:	The group account %%PORTNAME%% daemon runs as
X#				It uses 'wheel' group by default.
X# %%PORTNAME%%_datadir (str):	Default to "/var/db/%%PORTNAME%%"
X#				Base data directory.
X
X. /etc/rc.subr
X
Xname=%%PORTNAME%%
Xrcvar=%%PORTNAME%%_enable
X
X: ${%%PORTNAME%%_enable:=NO}
X: ${%%PORTNAME%%_config=%%PREFIX%%/etc/%%PORTNAME%%.conf}
X: ${%%PORTNAME%%_datadir=/var/db/%%PORTNAME%%}
X: ${%%PORTNAME%%_user="root"}
X: ${%%PORTNAME%%_group="wheel"}
X
Xrequired_files=${%%PORTNAME%%_config}
Xcommand=%%PREFIX%%/bin/%%PORTNAME%%d
X%%PORTNAME%%_chdir=${%%PORTNAME%%_datadir}
Xpidfile="${%%PORTNAME%%_datadir}/%%PORTNAME%%d.pid"
Xstop_cmd=%%PORTNAME%%_stop
Xcommand_args="-conf=${%%PORTNAME%%_config} -datadir=${%%PORTNAME%%_datadir} -noupnp -daemon -pid=${pidfile}"
Xstart_precmd="${name}_prestart"
X
X%%PORTNAME%%_create_datadir()
X{
X	echo "Creating data directory"
X	eval mkdir -p ${%%PORTNAME%%_datadir}
X	[ $? -eq 0 ] && chown -R ${%%PORTNAME%%_user}:${%%PORTNAME%%_group} ${%%PORTNAME%%_datadir}
X	ln -s ${%%PORTNAME%%_datadir} /.%%PORTNAME%%
X}
X
X%%PORTNAME%%_prestart()
X{
X	if [ ! -d "${%%PORTNAME%%_datadir}/." ]; then
X		%%PORTNAME%%_create_datadir || return 1
X	fi
X}
X
X%%PORTNAME%%_requirepidfile()
X{
X	if [ ! "0`check_pidfile ${pidfile} ${command}`" -gt 1 ]; then
X		echo "${name} not running? (check $pidfile)."
X		exit 1
X	fi
X}
X
X%%PORTNAME%%_stop()
X{
X    %%PORTNAME%%_requirepidfile
X
X	echo "Stopping ${name}."
X	eval ${command} -conf=${%%PORTNAME%%_config} -datadir=${%%PORTNAME%%_datadir} stop
X	wait_for_pids ${rc_pid}
X}
X
Xload_rc_config $name
Xrun_rc_command "$1"
055c3c8359b7d64f36244721baf4d7cc
echo x - Nanite/files/patch-src-util_h
sed 's/^X//' >Nanite/files/patch-src-util_h << '76b2138c04994fc4215e857300416be0'
X--- src/util.h.orig	2014-11-06 21:01:34.000000000 -0500
X+++ src/util.h	2014-11-06 20:58:33.000000000 -0500
X@@ -34,6 +34,7 @@
X 
X #include <stdint.h>
X #include <inttypes.h>
X+#include <stdarg.h>
X 
X static const int64_t COIN = 100000000;
X static const int64_t CENT = 1000000;
76b2138c04994fc4215e857300416be0
echo x - Nanite/files/Nanite.conf.sample
sed 's/^X//' >Nanite/files/Nanite.conf.sample << 'c6ce8ffa9b37378d28c77d8572af0983'
Xrpcuser=myname
X#rpcpassword=YOU MUST SET A PASSWORD
Xmaxconnections=10
Xrpcallowip=127.0.0.1
Xrpcport=23535
Xport=23534
Xserver=1
Xdaemon=1
Xlisten=1
Xlogtimestamps=1
Xaddnode=nanite.securepayment.cc
c6ce8ffa9b37378d28c77d8572af0983
echo x - Nanite/files/patch-Nanite-qt_pro
sed 's/^X//' >Nanite/files/patch-Nanite-qt_pro << '693be046c69d2a59786036f974454d3c'
X--- Nanite-qt.pro.orig	2014-11-06 18:18:30.000000000 -0500
X+++ Nanite-qt.pro	2014-11-06 20:11:51.000000000 -0500
X@@ -525,10 +525,10 @@
X # Set libraries and includes at end, to use platform-defined defaults if not overridden
X INCLUDEPATH += $$BOOST_INCLUDE_PATH $$BDB_INCLUDE_PATH $$OPENSSL_INCLUDE_PATH $$QRENCODE_INCLUDE_PATH
X LIBS += $$join(BOOST_LIB_PATH,,-L,) $$join(BDB_LIB_PATH,,-L,) $$join(OPENSSL_LIB_PATH,,-L,) $$join(QRENCODE_LIB_PATH,,-L,)
X-LIBS += -lssl -lcrypto -ldb_cxx$$BDB_LIB_SUFFIX
X+LIBS += -lssl -lcrypto -lexecinfo -ldb_cxx$$BDB_LIB_SUFFIX
X # -lgdi32 has to happen after -lcrypto (see  #681)
X windows:LIBS += -lws2_32 -lshlwapi -lmswsock -lole32 -loleaut32 -luuid -lgdi32
X-LIBS += -lboost_system$$BOOST_LIB_SUFFIX -lboost_filesystem$$BOOST_LIB_SUFFIX -lboost_program_options$$BOOST_LIB_SUFFIX -lboost_thread$$BOOST_THREAD_LIB_SUFFIX
X+LIBS += -lboost_system$$BOOST_LIB_SUFFIX -lboost_filesystem$$BOOST_LIB_SUFFIX -lboost_program_options$$BOOST_LIB_SUFFIX -lboost_thread$$BOOST_THREAD_LIB_SUFFIX -lboost_chrono$$BOOST_LIB_SUFFIX
X windows:LIBS += -lboost_chrono$$BOOST_LIB_SUFFIX
X 
X contains(RELEASE, 1) {
693be046c69d2a59786036f974454d3c
echo x - Nanite/files/patch-src-smessage.cpp
sed 's/^X//' >Nanite/files/patch-src-smessage.cpp << 'a00272fbf3bddb119851c53346757520'
X--- src/smessage.cpp.orig	2014-11-06 21:36:20.000000000 -0500
X+++ src/smessage.cpp	2014-11-06 21:36:30.000000000 -0500
X@@ -3159,12 +3159,7 @@
X     HMAC_CTX_init(&ctx);
X     
X     unsigned int nBytes;
X-    if (!HMAC_Init_ex(&ctx, &civ[0], 32, EVP_sha256(), NULL)
X-        || !HMAC_Update(&ctx, (unsigned char*) pHeader+4, SMSG_HDR_LEN-4)
X-        || !HMAC_Update(&ctx, (unsigned char*) pPayload, nPayload)
X-        || !HMAC_Update(&ctx, pPayload, nPayload)
X-        || !HMAC_Final(&ctx, sha256Hash, &nBytes)
X-        || nBytes != 32)
X+    if (nBytes != 32)
X     {
X         if (fDebugSmsg)
X             printf("HMAC error.\n");
X@@ -3237,13 +3232,7 @@
X             memcpy(civ+i, &nonse, 4);
X         
X         unsigned int nBytes;
X-        if (!HMAC_Init_ex(&ctx, &civ[0], 32, EVP_sha256(), NULL)
X-            || !HMAC_Update(&ctx, (unsigned char*) pHeader+4, SMSG_HDR_LEN-4)
X-            || !HMAC_Update(&ctx, (unsigned char*) pPayload, nPayload)
X-            || !HMAC_Update(&ctx, pPayload, nPayload)
X-            || !HMAC_Final(&ctx, sha256Hash, &nBytes)
X-            //|| !HMAC_Final(&ctx, &vchHash[0], &nBytes)
X-            || nBytes != 32)
X+        if (nBytes != 32)
X             break;
X         
X         /*
X@@ -3560,11 +3549,7 @@
X     HMAC_CTX ctx;
X     HMAC_CTX_init(&ctx);
X     
X-    if (!HMAC_Init_ex(&ctx, &key_m[0], 32, EVP_sha256(), NULL)
X-        || !HMAC_Update(&ctx, (unsigned char*) &smsg.timestamp, sizeof(smsg.timestamp))
X-        || !HMAC_Update(&ctx, &vchCiphertext[0], vchCiphertext.size())
X-        || !HMAC_Final(&ctx, smsg.mac, &nBytes)
X-        || nBytes != 32)
X+    if (nBytes != 32)
X         fHmacOk = false;
X     
X     HMAC_CTX_cleanup(&ctx);
X@@ -3862,11 +3847,7 @@
X     HMAC_CTX ctx;
X     HMAC_CTX_init(&ctx);
X     
X-    if (!HMAC_Init_ex(&ctx, &key_m[0], 32, EVP_sha256(), NULL)
X-        || !HMAC_Update(&ctx, (unsigned char*) &psmsg->timestamp, sizeof(psmsg->timestamp))
X-        || !HMAC_Update(&ctx, pPayload, nPayload)
X-        || !HMAC_Final(&ctx, MAC, &nBytes)
X-        || nBytes != 32)
X+    if (nBytes != 32)
X         fHmacOk = false;
X     
X     HMAC_CTX_cleanup(&ctx);
a00272fbf3bddb119851c53346757520
echo x - Nanite/Makefile
sed 's/^X//' >Nanite/Makefile << '6effcfc2241e35b667000431250d455c'
X# Created by: Daniel Morante <daniel@morante.net>
X# $FreeBSD$
X
XPORTNAME=	Nanite
XPORTVERSION=	1.0.0.0
XCATEGORIES=	net-p2p finance
XMASTER_SITES=	GH
X
XMAINTAINER=	daniel@morante.net
XCOMMENT=	Peer-to-Peer crypto currency of with PoS and X11 PoW
X
XLICENSE=	MIT
X
XLIB_DEPENDS=	libboost_date_time.so:${PORTSDIR}/devel/boost-libs \
X				libexecinfo.so:${PORTSDIR}/devel/libexecinfo
X
XOPTIONS_DEFINE=	X11 UPNP QRCODES STATIC
XOPTIONS_DEFAULT=	X11 QRCODES
XUPNP_DESC=	Build with UPNP support
XQRCODES_DESC=	Build with QR code display
X
XUSE_GITHUB=	yes
XGH_ACCOUNT=	x${PORTNAME}
XGH_PROJECT=	${PORTNAME}
XGH_COMMIT=	67af01a
XGH_TAGNAME=	67af01a
X
XUSES=		gmake
XUSE_OPENSSL=	yes
XUSE_BDB=	yes
XWANT_BDB_VER=	48
X
XCXXFLAGS+=	-I${LOCALBASE}/include -I${BDB_INCLUDE_DIR}
XCXXFLAGS+=	-L${LOCALBASE}/lib -L${BDB_LIB_DIR}
XCXXFLAGS+=	-Wno-invalid-offsetof
X
X.include <bsd.port.options.mk>
X
X.if ${PORT_OPTIONS:MX11}
XPLIST_SUB+=	X11=""
X.else
XSUB_LIST+=	PORTNAME=${PORTNAME}
XUSE_RC_SUBR=	${PORTNAME}
XSUB_FILES=	pkg-message
XPLIST_SUB+=	X11="@comment "
X.endif
X
X.if ${PORT_OPTIONS:MX11}
XUSE_QT4=	corelib gui qmake_build linguist uic moc rcc
XBINARY=		${PORTNAME}-qt
XPLIST_SUB+=	HEADLESS="@comment "
X.else
XBINARY=		${PORTNAME}d
XMAKE_ARGS+=	-C ${WRKSRC}/src
XPLIST_SUB+=	HEADLESS=""
X.endif
X
X.if ${PORT_OPTIONS:MSTATIC}
XMAKE_ARGS+=	STATIC=1
X.endif
X
X.if ${PORT_OPTIONS:MQRCODES}
XLIB_DEPENDS+=	libqrencode.so:${PORTSDIR}/graphics/libqrencode
XQMAKE_USE_QRCODE=1
X.else
XQMAKE_USE_QRCODE=0
X.endif
X
XPLIST_SUB+=	EXECUTABLE="bin/${BINARY}" \
X			PORTNAME=${PORTNAME}
X
X.if ${PORT_OPTIONS:MUPNP}
XLIB_DEPENDS+=	libminiupnpc.so:${PORTSDIR}/net/miniupnpc
XQMAKE_USE_UPNP=	1
X.else
XQMAKE_USE_UPNP=	-
X.endif
X
X.include <bsd.port.pre.mk>
X
Xpost-patch:
X	@${REINPLACE_CMD} -e 's|%%PREFIX%%|${PREFIX}|' ${WRKSRC}/src/makefile.bsd
X	@${CHMOD} +x ${WRKSRC}/src/leveldb/build_detect_platform
X.if !${PORT_OPTIONS:MX11}
X	@cd ${WRKSRC}/src && ${CP} -p makefile.bsd Makefile
X	@${REINPLACE_CMD} \
X		-e 's|^USE_UPNP.*$$|USE_UPNP=${QMAKE_USE_UPNP}|' \
X		-e 's|-l pthread|${PTHREAD_LIBS}|g' \
X		-e 's:-l dl::' \
X		${WRKSRC}/src/Makefile
X.endif
X
Xdo-configure:
X.if ${PORT_OPTIONS:MX11}
X	cd ${WRKSRC} && ${SETENV} ${QMAKE_ENV} \
X		${QMAKE} ${QMAKE_ARGS} USE_UPNP=${QMAKE_USE_UPNP} USE_QRCODE=${QMAKE_USE_QRCODE} \
X		QMAKE_LRELEASE=lrelease-qt4 PREFIX=${PREFIX} INCLUDEPATH=${BDB_INCLUDE_DIR} \
X		QMAKE_LIBDIR+=${BDB_LIB_DIR} ${PORTNAME}-qt.pro
X.endif
X
Xdo-install:
X.if ${PORT_OPTIONS:MX11}
X	${INSTALL_PROGRAM} -s ${WRKSRC}/${BINARY} ${STAGEDIR}${PREFIX}/bin/${BINARY}
X	${REINPLACE_CMD} -e 's,=/usr,=${PREFIX},' \
X		-e 's,bitcoin,Muniti,g' \
X		-e 's,Bitcoin,${PORTNAME},g' \
X		-e 's,128,,g' ${WRKSRC}/contrib/debian/bitcoin-qt.desktop
X	${INSTALL} ${WRKSRC}/contrib/debian/bitcoin-qt.desktop ${STAGEDIR}${PREFIX}/share/applications/${PORTNAME}-qt.desktop
X	${INSTALL} ${WRKSRC}/src/qt/res/icons/bitcoin.png ${STAGEDIR}${PREFIX}/share/pixmaps/${PORTNAME}.png
X
X.else
X	${INSTALL_PROGRAM} -s ${WRKSRC}/src/${BINARY} ${STAGEDIR}${PREFIX}/bin/${BINARY}
X	${INSTALL} ${FILESDIR}/${PORTNAME}.conf.sample ${STAGEDIR}${PREFIX}/etc/${PORTNAME}.conf.sample
X	@if [ ! -f ${PREFIX}/etc/${PORTNAME}.conf ]; then \
X		${CP} -p ${FILESDIR}/${PORTNAME}.conf.sample ${STAGEDIR}${PREFIX}/etc/${PORTNAME}.conf; \
X	fi
X.endif
X
X.include <bsd.port.post.mk>
6effcfc2241e35b667000431250d455c
echo x - Nanite/distinfo
sed 's/^X//' >Nanite/distinfo << '02ae1bdaf1940a4e51db36ef319f290e'
XSHA256 (Nanite-1.0.0.0.tar.gz) = 03d350bde2ae8c8805a5b177740009fb8328da4e4533bc38d3f04b9098869c4a
XSIZE (Nanite-1.0.0.0.tar.gz) = 6305337
02ae1bdaf1940a4e51db36ef319f290e
echo x - Nanite/pkg-descr
sed 's/^X//' >Nanite/pkg-descr << '64c0113fd5e3788b102897506677270c'
XNanite is a free open source peer-to-peer electronic cash system that
Xis completely decentralized, without the need for a central server or
Xtrusted parties. Users hold the crypto keys to their own money and
Xtransact directly with each other, with the help of a P2P network to
Xcheck for double-spending.
X
XWWW: https://github.com/xNanite/Nanite
64c0113fd5e3788b102897506677270c
echo x - Nanite/pkg-plist
sed 's/^X//' >Nanite/pkg-plist << 'f0506fbd1fbf318108e4f44022aca9bd'
X%%EXECUTABLE%%
X%%X11%%share/applications/%%PORTNAME%%-qt.desktop
X%%X11%%share/pixmaps/%%PORTNAME%%.png
X%%HEADLESS%%@unexec if cmp -s %D/etc/%%PORTNAME%%.conf.sample %D/etc/%%PORTNAME%%.conf; then rm -f %D/etc/%%PORTNAME%%.conf; fi
X%%HEADLESS%%etc/%%PORTNAME%%.conf.sample
X%%HEADLESS%%@exec if [ ! -f %D/etc/%%PORTNAME%%.conf ] ; then cp -p %D/%F %B/%%PORTNAME%%.conf; fi
f0506fbd1fbf318108e4f44022aca9bd
exit

